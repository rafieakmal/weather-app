{"version":3,"file":"helicorder.js","sources":["../../src/helicorder.js"],"sourcesContent":["// @flow\n\n/*\n * Philip Crotwell\n * University of South Carolina, 2019\n * http://www.seis.sc.edu\n */\n\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport {insertCSS} from './cssutil.js';\nimport { SeismogramDisplayData } from './seismogram.js';\nimport { Seismograph } from './seismograph.js';\nimport { SeismographConfig } from './seismographconfig';\nimport {StartEndDuration, isDef} from './util.js';\n\n/**\n * A helicorder-like multi-line seismogram display usually covering 24 hours\n * \n * @param inSvgParent the parent element, usually a div tag\n * @param heliConfig configuration object\n * @param seisData the data to display\n */\nexport class Helicorder {\n  seismographArray: Array<Seismograph>;\n  svgParent: any;\n  heliConfig: HelicorderConfig;\n  seisData: SeismogramDisplayData;\n  xScaleArray: any;\n  yScale: any;\n  constructor(inSvgParent: any,\n              heliConfig: HelicorderConfig,\n              seisData: SeismogramDisplayData) {\n    this.seismographArray = [];\n    this.seisData = seisData;\n\n    if (typeof inSvgParent === 'string') {\n      this.svgParent = d3.select(inSvgParent);\n    } else {\n      this.svgParent = inSvgParent;\n    }\n    this.svgParent = this.svgParent.append('div').classed('helicorder', true);\n    this.heliConfig = heliConfig;\n  }\n  /**\n   * draws, or redraws, the helicorder.\n   */\n  draw() {\n    this.heliConfig.lineSeisConfig.doRMean = this.heliConfig.doRMean;\n    this.drawSeismograms();\n  }\n  /**\n   * draws or redraws the seismograms in the helicorder\n   *\n   * @private\n   */\n  drawSeismograms(): void {\n    if ( ! this.seisData) {\n      // no data\n      return;\n    }\n\n    const timeWindow = this.heliConfig.fixedTimeScale;\n    if ( ! isDef(timeWindow)){\n      throw new Error(\"Helicorder config must have fixedTimeScale set\");\n    }\n    let maxVariation = 1;\n    if (this.seisData.seismogram) {\n      const seis = this.seisData.seismogram; // for flow\n      if ( ! this.heliConfig.fixedYScale) {\n        if ( this.heliConfig.maxVariation === 0) {\n          let cutSeis = seis.cut(timeWindow);\n          if (cutSeis) {\n            let [min,max] = cutSeis.findMinMax();\n            let mean = cutSeis.mean();\n            let posOffset = max - mean;\n            let negOffset = mean - min;\n            maxVariation = Math.max(posOffset, negOffset);\n          }\n        } else {\n          maxVariation = this.heliConfig.maxVariation;\n        }\n      }\n    }\n\n    let startTime = moment.utc(timeWindow.startTime);\n    this.seismographArray = [];\n    const secondsPerLine = timeWindow.duration.asSeconds()/this.heliConfig.numLines;\n    this.svgParent.selectAll(\"div.heliLine\").remove();\n    let lineTimes = this.calcTimesForLines(startTime, secondsPerLine, this.heliConfig.numLines);\n    const margin = this.heliConfig.margin;\n    const nl = this.heliConfig.numLines;\n    const baseHeight = (this.heliConfig.maxHeight-margin.top-margin.bottom) /\n                       (nl-(nl-1)*this.heliConfig.overlap) ;\n    for(let lineTime of lineTimes) {\n      let startTime = lineTime.startTime;\n      let endTime = lineTime.endTime;\n      let height = baseHeight;\n      let marginTop = lineTime.lineNumber===0?0:Math.round(-1.0*height*this.heliConfig.overlap);\n\n      let lineSeisConfig = this.heliConfig.lineSeisConfig.clone();\n      if (lineTime.lineNumber===0) {\n        lineSeisConfig.title = this.heliConfig.title;\n        lineSeisConfig.isXAxisTop = this.heliConfig.isXAxisTop;\n        lineSeisConfig.margin.top += this.heliConfig.margin.top;\n        height += this.heliConfig.margin.top;\n      } else if (lineTime.lineNumber === nl-1) {\n        lineSeisConfig.isXAxis = this.heliConfig.isXAxis;\n        lineSeisConfig.margin.bottom += this.heliConfig.margin.bottom;\n        height += this.heliConfig.margin.bottom;\n      }\n      let seisDiv = this.svgParent.append('div')\n        .classed('heliLine', true)\n        .style('height', height+'px')\n        .style('margin-top', marginTop+'px');\n      lineSeisConfig.fixedTimeScale = lineTime;\n      lineSeisConfig.yLabel = `${startTime.format(\"HH:mm\")}`;\n      lineSeisConfig.yLabelRight = `${endTime.format(\"HH:mm\")}`;\n      lineSeisConfig.lineColors = [ seisDiv.style(\"color\")];\n\n      let lineCutSeis = null;\n      let lineSeisData;\n      let lineMean = 0;\n      if (this.seisData.seismogram) {\n        lineCutSeis = this.seisData.seismogram.cut(lineTime);\n        lineSeisData = this.seisData.cloneWithNewSeismogram(lineCutSeis);\n        lineMean = lineSeisData.mean;\n      } else {\n        // no data in window, but keep seisData in case of markers, etc\n        lineSeisData = this.seisData.clone();\n      }\n      lineSeisData.timeWindow = lineTime;\n\n      if (this.heliConfig.fixedYScale) {\n        lineSeisConfig.fixedYScale = this.heliConfig.fixedYScale;\n      } else {\n        if (this.heliConfig.doRMean) {\n          lineSeisConfig.fixedYScale = [lineMean-maxVariation, lineMean+maxVariation];\n        } else {\n          lineSeisConfig.fixedYScale = [lineMean-maxVariation, lineMean+maxVariation];\n        }\n      }\n      let seismograph = new Seismograph(seisDiv, lineSeisConfig, lineSeisData);\n      seismograph.draw();\n      if (lineTime.lineNumber===0) {\n        // add UTC to top left\n        seismograph.svg.append(\"g\")\n        .classed(\"yLabel\", true)\n        .classed(\"utcLabel\", true)\n        .append(\"text\")\n        .attr(\"x\", 0).attr(\"y\",0)\n        .attr(\"text-anchor\", \"start\")\n        .attr(\"dy\", \".75em\")\n        .text(\"UTC\");\n      }\n      this.seismographArray.push(seismograph);\n      startTime = endTime;\n    }\n  }\n  /**\n   * Calculates the time range covered by each line of the display\n   *\n   * @param   startTime      start of display\n   * @param   secondsPerLine seconds covered by each line\n   * @param   numberOfLines  number of lines\n   * @returns Array of HeliTimeRange, one per line\n   */\n  calcTimesForLines(startTime: moment, secondsPerLine: number, numberOfLines: number): Array<HeliTimeRange> {\n    let out = [];\n    let s = moment.utc(startTime);\n    for (let lineNum=0; lineNum < numberOfLines; lineNum++) {\n      let startEnd = new HeliTimeRange(s, null, secondsPerLine);\n      startEnd.lineNumber = lineNum;\n      out.push(startEnd);\n      s = moment.utc(startEnd.endTime);\n    }\n    return out;\n  }\n}\n\n/**\n * Configuration of the helicorder\n *\n * @param timeWindow the time range covered by the helicorder, required\n */\nexport class HelicorderConfig extends SeismographConfig {\n  lineSeisConfig: SeismographConfig;\n  overlap: number;\n  numLines: number;\n  maxVariation: number;\n  constructor(timeWindow: StartEndDuration) {\n    super();\n    if ( ! isDef(timeWindow)){\n      throw new Error(\"Helicorder config must have fixedTimeScale set\");\n    }\n    this.fixedTimeScale = timeWindow;\n    this.maxVariation = 0;\n    this.maxHeight = 600;\n    this.xLabel = '';\n    this.yLabel = '';\n    this.xSublabel = '';\n    this.ySublabel = ' ';\n    this.ySublabelIsUnits = false;\n    this.isXAxis = true;\n    this.isXAxisTop = true;\n    this.isYAxis = false;\n    this.overlap = 0.5;\n    this.numLines = 12;\n    this.margin.left = 20;\n    this.margin.right = 20;\n    this.margin.top = 40;\n\n    this.lineSeisConfig = new SeismographConfig();\n    this.lineSeisConfig.ySublabel = ` `;\n    this.lineSeisConfig.xLabel = ' ';\n    this.lineSeisConfig.yLabel = '';// replace later with `${startTime.format(\"HH:mm\")}`;\n    this.lineSeisConfig.yLabelOrientation = 'horizontal';\n    this.lineSeisConfig.ySublabelIsUnits = false;\n    this.lineSeisConfig.isXAxis = false;\n    this.lineSeisConfig.isYAxis = false;\n    this.lineSeisConfig.margin.top = 0;\n    this.lineSeisConfig.margin.bottom = 0;\n    this.lineSeisConfig.margin.left = 37;\n    this.lineSeisConfig.margin.right = 37;\n    this.lineSeisConfig.wheelZoom = false;\n    this.lineSeisConfig.doRMean = true;\n  }\n}\n\n/**\n * Time range for a single line of the helicorder, extends StartEndDuration\n * to add the line number\n */\nexport class HeliTimeRange extends StartEndDuration {\n  lineNumber: number;\n  constructor(startTime: moment | null, endTime: moment | null, duration: number | null =null, clockOffset?: number | null =0) {\n    super(startTime, endTime, duration, clockOffset);\n  }\n}\n\n/** default styling for helicorder plots. */\nexport const helicorder_css = `\n\ndiv.helicorder {\n  height: 100%;\n  width: 100%;\n}\n\ndiv.helicorder div.heliLine .yLabel text {\n  font-size: smaller;\n}\n\ndiv.helicorder div.heliLine:nth-child(3n+1) {\n  color: skyblue;\n}\ndiv.helicorder div.heliLine:nth-child(3n+1) path.seispath {\n  stroke: skyblue;\n}\ndiv.helicorder div.heliLine:nth-child(3n+2) {\n  color: olivedrab;\n}\ndiv.helicorder div.heliLine:nth-child(3n+2) path.seispath {\n  stroke: olivedrab;\n}\ndiv.helicorder div.heliLine:nth-child(3n) {\n  color: goldenrod;\n}\ndiv.helicorder div.heliLine:nth-child(3n) path.seispath {\n  stroke: goldenrod;\n}\ndiv.helicorder div.heliLine:nth-child(3n+1) .yLabel text {\n  fill: skyblue;\n}\ndiv.helicorder div.heliLine:nth-child(3n+2) .yLabel text {\n  fill: olivedrab;\n}\ndiv.helicorder div.heliLine:nth-child(3n) .yLabel text {\n  fill: goldenrod;\n}\n\n`;\n\nif (document){\n  insertCSS(helicorder_css);\n}\n"],"names":["Helicorder","constructor","inSvgParent","heliConfig","seisData","seismographArray","svgParent","d3","append","classed","draw","lineSeisConfig","doRMean","drawSeismograms","timeWindow","fixedTimeScale","isDef","Error","maxVariation","seismogram","seis","fixedYScale","cutSeis","cut","min","max","findMinMax","mean","posOffset","negOffset","Math","startTime","moment","utc","secondsPerLine","duration","asSeconds","numLines","selectAll","remove","lineTimes","calcTimesForLines","margin","nl","baseHeight","maxHeight","top","bottom","overlap","lineTime","endTime","height","marginTop","lineNumber","round","clone","title","isXAxisTop","isXAxis","seisDiv","style","yLabel","format","yLabelRight","lineColors","lineCutSeis","lineSeisData","lineMean","cloneWithNewSeismogram","seismograph","Seismograph","svg","attr","text","push","numberOfLines","out","s","lineNum","startEnd","HeliTimeRange","HelicorderConfig","SeismographConfig","xLabel","xSublabel","ySublabel","ySublabelIsUnits","isYAxis","left","right","yLabelOrientation","wheelZoom","StartEndDuration","clockOffset","helicorder_css","document","insertCSS"],"mappings":"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"}