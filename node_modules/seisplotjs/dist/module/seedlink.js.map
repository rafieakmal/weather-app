{"version":3,"file":"seedlink.js","sources":["../../src/seedlink.js"],"sourcesContent":["// @flow\n\n/*\n * Philip Crotwell\n * University of South Carolina, 2019\n * http://www.seis.sc.edu\n */\n\nimport * as miniseed from './miniseed';\nimport * as RSVP from 'rsvp';\nimport moment from 'moment';\n\nimport {dataViewToString} from './util';\n\nexport const SEEDLINK_PROTOCOL = \"SeedLink3.1\";\n\nexport type SequencedDataRecord = {\n  rawsequence: string,\n  sequence: number,\n  miniseed: miniseed.DataRecord\n};\n\n /**\n  * A seedlink websocket connection to the given url.\n  * The connection is not made until the connect() method is called.\n  * Note this cannot connect directly to a native TCP socket, instead it\n  * sends the seedlink protocol over a websocket. Currently only the IRIS\n  * ringserver, https://github.com/iris-edu/ringserver,\n  * supports websockets, but it may be possible to use thrid party\n  * tools to proxy the websocket to a TCP seedlink socket.\n  *\n  * @param url websocket URL to connect to\n  * @param requestConfig an array of seedlink commands\n  * like:<pre><code>\n  *   [ 'STATION JSC CO',\n  *     'SELECT 00BHZ.D' ]\n  *     </pre></code>\n  * @param receiveMiniseedFn the callback function that\n  * will be invoked for each seedlink packet received\n  * which contains 'sequence', a sequence number\n  * and 'miniseed', a single miniseed record.\n  */\nexport class SeedlinkConnection {\n  url: string;\n  requestConfig: Array<string>;\n  receiveMiniseedFn: (packet: SequencedDataRecord) => void;\n  errorFn: (error: Error) => void;\n  closeFn: null | (close: CloseEvent) => void;\n  webSocket: null | WebSocket;\n  command: string;\n  constructor(url: string, requestConfig: Array<string>, receiveMiniseedFn: (packet: SequencedDataRecord) => void, errorFn: (error: Error) => void) {\n    this.url = url;\n    this.requestConfig = requestConfig;\n    this.receiveMiniseedFn = receiveMiniseedFn;\n    this.errorFn = errorFn;\n    this.closeFn = null;\n    this.command = 'DATA';\n  }\n  setTimeCommand(startTime: moment) {\n    this.command = \"TIME \"+moment.utc(startTime).format(\"YYYY,MM,DD,HH,mm,ss\");\n  }\n  setOnError(errorFn: (error: Error) => void) {\n    this.errorFn = errorFn;\n  }\n  setOnClose(closeFn: (close: CloseEvent) => void) {\n    this.closeFn = closeFn;\n  }\n\n  connect() {\n    if (this.webSocket) {\n      this.webSocket.close();\n      this.webSocket = null;\n    }\n    try {\n      const webSocket = new WebSocket(this.url, SEEDLINK_PROTOCOL);\n      this.webSocket = webSocket;\n      webSocket.binaryType = 'arraybuffer';\n      const that = this;\n      webSocket.onopen = function() {\n        that.sendHello()\n        .then(function() {\n          return that.sendCmdArray(that.requestConfig);\n        })\n        .then(function() {\n          return that.sendCmdArray([ that.command ]);\n        })\n        .then(function(val) {\n          webSocket.onmessage = function(event) {\n            that.handle(event);\n          };\n          webSocket.send('END\\r');\n          return val;\n        }).catch(err => {\n          if (that.errorFn) {\n            that.errorFn(err);\n          } else {\n            throw err;\n          }\n          that.close();\n        });\n      };\n      webSocket.onerror = function(err) {\n        if (that.errorFn) {\n          that.errorFn(err);\n        } else {\n          throw err;\n        }\n      };\n      webSocket.onclose = function(closeEvent) {\n        if (that.closeFn) {\n          that.closeFn(closeEvent);\n        }\n        if (that.webSocket) {\n          that.webSocket = null;\n        }\n      };\n    } catch(err) {\n      if (this.errorFn) {\n        this.errorFn(err);\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  close(): void {\n    if (this.webSocket) {\n      this.webSocket.close();\n    }\n  }\n\n  handle(event: MessageEvent ): void {\n    //for flow\n    const data = ((event.data: any): ArrayBuffer);\n    if (data.byteLength < 64) {\n      //assume text\n    } else {\n      this.handleMiniseed(event);\n    }\n  }\n\n  handleMiniseed(event: MessageEvent): void {\n    //for flow\n    const data = ((event.data: any): ArrayBuffer);\n    try {\n        if (data.byteLength < 64) {\n          this.errorFn(new Error(\"message too small to be miniseed: \"+data.byteLength +\" \"+dataViewToString(new DataView(data))));\n          return;\n        }\n        let slHeader = new DataView(data, 0, 8);\n        // check for 'SL' at start\n        if (slHeader.getInt8(0) === 83 && slHeader.getInt8(1) === 76) {\n          let seqStr = '';\n          for (let i=0; i<6; i++) {\n            seqStr = seqStr + String.fromCharCode(slHeader.getInt8(2+i));\n          }\n          let dataView = new DataView(data, 8, data.byteLength-8);\n          let out = {\n            rawsequence: seqStr,\n            sequence: parseInt(seqStr, 16),\n            miniseed: miniseed.parseSingleDataRecord(dataView)\n          };\n          this.receiveMiniseedFn(out);\n        } else {\n          throw new Error(\"Not a seedlink packet, no starting SL: \"+slHeader.getInt8(0)+' '+slHeader.getInt8(1));\n        }\n     } catch(e) {\n        this.errorFn(\"Error, closing seedlink. \"+e);\n        this.close();\n     }\n  }\n  isConnected(): boolean  {\n    return this.webSocket !== null;\n  }\n\n  /**\n   * Sends initial HELLO to server and waits for response.\n   *\n   * @returns            Promise that resolves to the response from the server.\n   */\n  sendHello(): Promise<string> {\n    let webSocket = this.webSocket;\n    let promise = new RSVP.Promise(function(resolve, reject) {\n      if (webSocket) {\n        webSocket.onmessage = function(event) {\n          //for flow\n          const data = ((event.data: any): ArrayBuffer);\n          let replyMsg = dataViewToString(new DataView(data));\n          let lines = replyMsg.trim().split('\\r');\n          if (lines.length === 2) {\n            resolve(lines);\n          } else {\n            reject(\"not 2 lines: \"+replyMsg);\n          }\n        };\n        webSocket.send(\"HELLO\\r\");\n      } else {\n        reject(\"webSocket has been closed\");\n      }\n    });\n    return promise;\n  }\n\n  /**\n   * Sends an array of commands, each as a Promise waiting for the 'OK' response\n   * before sending the next.\n   *\n   * @param   cmd array of commands to send\n   * @returns      Promise that resolves to the 'OK' returned by the last\n   *   command if successful, or rejects on the first failure.\n   */\n  sendCmdArray(cmd: Array<string>): Promise<string> {\n    let that = this;\n    return cmd.reduce(function(accum: Promise<string>, next: string) {\n      return accum.then(function() {\n        return that.createCmdPromise(next);\n      });\n    }, RSVP.resolve());\n  }\n\n  /**\n   * creates a Promise that sends a command and waits resolved with the result.\n   *\n   * @param   mycmd command string to send.\n   * @returns        Promise that resolves to the reply from the server.\n   */\n  createCmdPromise(mycmd: string): Promise<string> {\n    let webSocket = this.webSocket;\n    let promise = new RSVP.Promise(function(resolve, reject) {\n      if (webSocket) {\n        webSocket.onmessage = function(event) {\n          //for flow\n          const data = ((event.data: any): ArrayBuffer);\n          let replyMsg = dataViewToString(new DataView(data)).trim();\n          if (replyMsg === 'OK') {\n            resolve(replyMsg);\n          } else {\n            reject(\"msg not OK: \"+replyMsg);\n          }\n        };\n        webSocket.send(mycmd+'\\r\\n');\n      } else {\n        reject(\"webSocket has been closed\");\n      }\n    });\n    return promise;\n  }\n}\n"],"names":["SEEDLINK_PROTOCOL","SeedlinkConnection","constructor","url","requestConfig","receiveMiniseedFn","errorFn","closeFn","command","setTimeCommand","startTime","moment","utc","format","setOnError","setOnClose","connect","webSocket","close","WebSocket","binaryType","that","onopen","sendHello","then","sendCmdArray","val","onmessage","event","handle","send","catch","err","onerror","onclose","closeEvent","data","byteLength","handleMiniseed","Error","dataViewToString","DataView","slHeader","getInt8","seqStr","i","String","fromCharCode","dataView","out","rawsequence","sequence","parseInt","miniseed","e","isConnected","promise","RSVP","resolve","reject","replyMsg","lines","trim","split","length","cmd","reduce","accum","next","createCmdPromise","mycmd"],"mappings":"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"}