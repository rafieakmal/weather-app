{"version":3,"file":"seismographconfig.js","sources":["../../src/seismographconfig.js"],"sourcesContent":["//@flow\n\n/*\n * Philip Crotwell\n * University of South Carolina, 2019\n * http://www.seis.sc.edu\n */\n\nimport { SeismogramDisplayData, Seismogram } from './seismogram.js';\nimport {StartEndDuration, isDef } from './util.js';\nimport moment from 'moment';\nimport * as d3 from 'd3';\n\nexport type MarginType = {\n  top: number,\n  right: number,\n  bottom: number,\n  left: number\n};\n\n/** Constant for drawing seismogram using svg. */\nexport const DRAW_SVG = \"svg\";\n/** Constant for drawing seismogram using canvas, axies are still svg. */\nexport const DRAW_CANVAS = \"canvas\";\n/** Constant for drawing seismogram using both canvas and svg, for testing. */\nexport const DRAW_BOTH = \"both\"; // for testing\n/** Constant for drawing seismogram using both canvas and svg plus alignment markers, for testing. */\nexport const DRAW_BOTH_ALIGN = \"alignment\"; // for testing\n\n/**\n * Configuration object for Seismograph display.\n * \n */\nexport class SeismographConfig {\n  drawingType: string;\n  xScaleFormat: (date: Date) => string;\n  yScaleFormat: string | (value: number) => string;\n  _title: Array<string>;\n  isXAxis: boolean;\n  isXAxisTop: boolean;\n  xLabel: string;\n  xLabelOrientation: string;\n  xSublabel: string;\n  isYAxis: boolean;\n  isYAxisRight: boolean;\n  isYAxisNice: boolean;\n  yLabel: string;\n  yLabelRight: string;\n  yLabelOrientation: string;\n  ySublabel: string;\n  ySublabelTrans: number;\n  ySublabelIsUnits: boolean;\n  doMarkers: boolean;\n  markerTextOffset: number;\n  markerTextAngle: number;\n  markerFlagpoleBase: string;\n  minHeight: number;\n  maxHeight: number;\n  margin: MarginType;\n  segmentDrawCompressedCutoff: number;//below this draw all points, above draw minmax\n  maxZoomPixelPerSample: number; // no zoom in past point of sample\n                                 // separated by pixels\n\n  connectSegments: boolean;\n  lineColors: Array<string>;\n  lineWidth: number;\n  wheelZoom: boolean;\n  doRMean: boolean;\n  doGain: boolean;\n  windowAmp: boolean;\n  fixedYScale: null | Array<number>;\n  fixedTimeScale: null | StartEndDuration;\n\n  constructor() {\n    this.drawingType = DRAW_CANVAS;\n    this.isXAxis = true;\n    this.isXAxisTop = false;\n    this.isYAxisNice = true;\n    this.isYAxis = true;\n    this.isYAxisRight = false;\n    this.xScaleFormat = multiFormatHour;\n    this.yScaleFormat = formatCountOrAmp;\n    this._title = [ ];\n    this.xLabel = \"Time\";\n    this.xLabelOrientation = \"horizontal\";\n    this.xSublabel = \"\";\n    this.yLabel = \"Amplitude\";\n    this.yLabelRight = \"\";\n    this.yLabelOrientation = \"vertical\";\n    this.ySublabel = \"\";\n    this.ySublabelTrans = 15;\n    this.ySublabelIsUnits = true;\n    this.doRMean = true;\n    this.doGain = true;\n    this.windowAmp = true;\n    this.fixedYScale = null;\n    this.fixedTimeScale = null;\n    this.doMarkers = true;\n    this.markerTextOffset = .85;\n    this.markerTextAngle = 45;\n    this.markerFlagpoleBase = \"bottom\"; // bottom or center\n    this.minHeight=0;\n    this.margin = {top: 20, right: 20, bottom: 42, left: 85, toString: function() {return \"t:\"+this.top+\" l:\"+this.left+\" b:\"+this.bottom+\" r:\"+this.right;}};\n    this.segmentDrawCompressedCutoff=10;//below this draw all points, above draw minmax\n    this.maxZoomPixelPerSample = 20; // no zoom in past point of sample\n                                     // separated by pixels\n\n    this.wheelZoom = true;\n    this.connectSegments = false;\n    this.lineColors = [\n       \"skyblue\",\n       \"olivedrab\",\n       \"goldenrod\",\n       \"firebrick\",\n       \"darkcyan\",\n       \"orange\",\n       \"darkmagenta\",\n       \"mediumvioletred\",\n       \"sienna\",\n       \"black\"];\n    this.lineWidth = 1;\n  }\n\n/**\n * gets the current title\n *\n * @returns        title as an array of strings\n */\n  get title(): Array<string> {\n    return this._title;\n  }\n  /**\n   * Sets the title as simple string or array of strings. If an array\n   * then each item will be in a separate tspan for easier formatting.\n   *\n   * @param value string or array of strings to be the title\n   */\n  set title(value: string | Array<string>) {\n    if (Array.isArray(value)) {\n      this._title = value;\n    } else {\n      this._title = [ value ];\n    }\n  }\n\n  /** Fake data to use to test alignment of seismograph axis and between canvas\n   *  and svg drawing.\n   *\n   * @param   timeWindow start and end of fake data\n   * @param   min        min amplitude for fake data, default is -100\n   * @param   max        max amplitude for fake data, default is 100\n   * @returns             fake data\n   */\n  createAlignmentData(timeWindow: StartEndDuration,\n        min: number = -100,\n        max: number = 100): SeismogramDisplayData {\n    const mid = (max+min)/2;\n    const fakeData = Float32Array.from([max, min, max, min, mid, mid, max, mid, mid, min]);\n\n    const fakeSampleRate = 1/(timeWindow.duration.asSeconds()/(fakeData.length-1));\n    const fakeSeis = Seismogram.createFromContiguousData(fakeData,\n                                          fakeSampleRate,\n                                          timeWindow.startTime );\n    const fakeSDD = SeismogramDisplayData.fromSeismogram(fakeSeis);\n    return fakeSDD;\n  }\n\n  getColorForIndex(i: number): string {\n    if (isDef(this.lineColors) && this.lineColors.length > 0) {\n      return this.lineColors[i%this.lineColors.length];\n    } else {\n        return \"black\";\n    }\n  }\n  clone(): SeismographConfig {\n    let out = new SeismographConfig();\n    Object.getOwnPropertyNames(this).forEach( name => {\n      // $FlowFixMe\n      if (this[name] instanceof moment) {\n        // $FlowFixMe\n        out[name] = moment.utc(this[name]);\n        // $FlowFixMe\n      } else if ( Array.isArray(this[name]) ) {\n        // $FlowFixMe\n        out[name] = this[name].slice();\n      } else {\n        // $FlowFixMe\n        out[name] = this[name];\n      }\n      // handle margin separately\n      out.margin = {\n        top: this.margin.top,\n        right: this.margin.right,\n        bottom: this.margin.bottom,\n        left: this.margin.left,\n        toString: function() {return \"t:\"+this.top+\" l:\"+this.left+\" b:\"+this.bottom+\" r:\"+this.right;}\n      };\n    });\n    return out;\n  }\n  toString() {\n    let outS = \"\";\n    Object.getOwnPropertyNames(this).forEach( name => {\n      // $FlowFixMe\n      outS += `  seisConfig.${name} = ${JSON.stringify(this[name])}\\n`;\n    });\n    return outS;\n  }\n}\n\nexport const formatCount = d3.format('~s');\nexport const formatExp = d3.format('.2e');\nexport const formatCountOrAmp = function(v: number): string {\n  return -1<v && v<1 && v !== 0 ? formatExp(v) : formatCount(v);\n};\n\nexport const formatMillisecond = d3.utcFormat(\".%L\");\nexport const formatSecond = d3.utcFormat(\":%S\");\nexport const formatMinute = d3.utcFormat(\"%H:%M\");\nexport const formatHour = d3.utcFormat(\"%H:%M\");\nexport const formatDay = d3.utcFormat(\"%m/%d\");\nexport const formatMonth = d3.utcFormat(\"%Y/%m\");\nexport const formatYear = d3.utcFormat(\"%Y\");\n\nexport const multiFormatHour = function(date: Date): string {\n  return (d3.utcSecond(date) < date ? formatMillisecond\n      : d3.utcMinute(date) < date ? formatSecond\n      : d3.utcHour(date) < date ? formatMinute\n      : d3.utcDay(date) < date ? formatHour\n      : d3.utcMonth(date) < date ?  formatDay\n      : d3.utcYear(date) < date ? formatMonth\n      : formatYear)(date);\n};\n"],"names":["DRAW_SVG","DRAW_CANVAS","DRAW_BOTH","DRAW_BOTH_ALIGN","SeismographConfig","constructor","drawingType","isXAxis","isXAxisTop","isYAxisNice","isYAxis","isYAxisRight","xScaleFormat","multiFormatHour","yScaleFormat","formatCountOrAmp","_title","xLabel","xLabelOrientation","xSublabel","yLabel","yLabelRight","yLabelOrientation","ySublabel","ySublabelTrans","ySublabelIsUnits","doRMean","doGain","windowAmp","fixedYScale","fixedTimeScale","doMarkers","markerTextOffset","markerTextAngle","markerFlagpoleBase","minHeight","margin","top","right","bottom","left","toString","segmentDrawCompressedCutoff","maxZoomPixelPerSample","wheelZoom","connectSegments","lineColors","lineWidth","title","value","Array","isArray","createAlignmentData","timeWindow","min","max","mid","fakeData","Float32Array","from","fakeSampleRate","duration","asSeconds","length","fakeSeis","Seismogram","createFromContiguousData","startTime","fakeSDD","SeismogramDisplayData","fromSeismogram","getColorForIndex","i","isDef","clone","out","Object","getOwnPropertyNames","forEach","name","moment","utc","slice","outS","JSON","stringify","formatCount","d3","formatExp","v","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatMonth","formatYear","date"],"mappings":";;;;;AAEA;;;;;;AAkBA;MACaA,QAAQ,GAAG;AACxB;;MACaC,WAAW,GAAG;AAC3B;;MACaC,SAAS,GAAG;;AACzB;;MACaC,eAAe,GAAG;;AAE/B;;;;;AAIO,MAAMC,iBAAN,CAAwB;AA0BO;AACL;AACA;AAY/BC,EAAAA,WAAW,GAAG;AACZ,SAAKC,WAAL,GAAmBL,WAAnB;AACA,SAAKM,OAAL,GAAe,IAAf;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,YAAL,GAAoBC,eAApB;AACA,SAAKC,YAAL,GAAoBC,gBAApB;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,MAAL,GAAc,MAAd;AACA,SAAKC,iBAAL,GAAyB,YAAzB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,MAAL,GAAc,WAAd;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,iBAAL,GAAyB,UAAzB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,gBAAL,GAAwB,IAAxB;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,gBAAL,GAAwB,GAAxB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,kBAAL,GAA0B,QAA1B,CA3BY;;AA4BZ,SAAKC,SAAL,GAAe,CAAf;AACA,SAAKC,MAAL,GAAc;AAACC,MAAAA,GAAG,EAAE,EAAN;AAAUC,MAAAA,KAAK,EAAE,EAAjB;AAAqBC,MAAAA,MAAM,EAAE,EAA7B;AAAiCC,MAAAA,IAAI,EAAE,EAAvC;AAA2CC,MAAAA,QAAQ,EAAE,oBAAW;AAAC,eAAO,OAAK,KAAKJ,GAAV,GAAc,KAAd,GAAoB,KAAKG,IAAzB,GAA8B,KAA9B,GAAoC,KAAKD,MAAzC,GAAgD,KAAhD,GAAsD,KAAKD,KAAlE;AAAyE;AAA1I,KAAd;AACA,SAAKI,2BAAL,GAAiC,EAAjC,CA9BY;;AA+BZ,SAAKC,qBAAL,GAA6B,EAA7B,CA/BY;AAgCqB;;AAEjC,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,eAAL,GAAuB,KAAvB;AACA,SAAKC,UAAL,GAAkB,CACf,SADe,EAEf,WAFe,EAGf,WAHe,EAIf,WAJe,EAKf,UALe,EAMf,QANe,EAOf,aAPe,EAQf,iBARe,EASf,QATe,EAUf,OAVe,CAAlB;AAWA,SAAKC,SAAL,GAAiB,CAAjB;AACD;AAEH;;;;;;;AAKE,MAAIC,KAAJ,GAA2B;AACzB,WAAO,KAAKhC,MAAZ;AACD;AACD;;;;;;;;AAMA,MAAIgC,KAAJ,CAAUC,KAAV,EAAyC;AACvC,QAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACxB,WAAKjC,MAAL,GAAciC,KAAd;AACD,KAFD,MAEO;AACL,WAAKjC,MAAL,GAAc,CAAEiC,KAAF,CAAd;AACD;AACF;AAED;;;;;;;;;;AAQAG,EAAAA,mBAAmB,CAACC,UAAD,EACbC,GAAW,GAAG,CAAC,GADF,EAEbC,GAAW,GAAG,GAFD,EAE6B;AAC9C,UAAMC,GAAG,GAAG,CAACD,GAAG,GAACD,GAAL,IAAU,CAAtB;AACA,UAAMG,QAAQ,GAAGC,YAAY,CAACC,IAAb,CAAkB,CAACJ,GAAD,EAAMD,GAAN,EAAWC,GAAX,EAAgBD,GAAhB,EAAqBE,GAArB,EAA0BA,GAA1B,EAA+BD,GAA/B,EAAoCC,GAApC,EAAyCA,GAAzC,EAA8CF,GAA9C,CAAlB,CAAjB;AAEA,UAAMM,cAAc,GAAG,KAAGP,UAAU,CAACQ,QAAX,CAAoBC,SAApB,MAAiCL,QAAQ,CAACM,MAAT,GAAgB,CAAjD,CAAH,CAAvB;AACA,UAAMC,QAAQ,GAAGC,UAAU,CAACC,wBAAX,CAAoCT,QAApC,EACqBG,cADrB,EAEqBP,UAAU,CAACc,SAFhC,CAAjB;AAGA,UAAMC,OAAO,GAAGC,qBAAqB,CAACC,cAAtB,CAAqCN,QAArC,CAAhB;AACA,WAAOI,OAAP;AACD;;AAEDG,EAAAA,gBAAgB,CAACC,CAAD,EAAoB;AAClC,QAAIC,KAAK,CAAC,KAAK3B,UAAN,CAAL,IAA0B,KAAKA,UAAL,CAAgBiB,MAAhB,GAAyB,CAAvD,EAA0D;AACxD,aAAO,KAAKjB,UAAL,CAAgB0B,CAAC,GAAC,KAAK1B,UAAL,CAAgBiB,MAAlC,CAAP;AACD,KAFD,MAEO;AACH,aAAO,OAAP;AACH;AACF;;AACDW,EAAAA,KAAK,GAAsB;AACzB,QAAIC,GAAG,GAAG,IAAIvE,iBAAJ,EAAV;AACAwE,IAAAA,MAAM,CAACC,mBAAP,CAA2B,IAA3B,EAAiCC,OAAjC,CAA0CC,IAAI,IAAI;AAChD;AACA,UAAI,KAAKA,IAAL,aAAsBC,QAA1B,EAAkC;AAChC;AACAL,QAAAA,GAAG,CAACI,IAAD,CAAH,GAAYC,QAAM,CAACC,GAAP,CAAW,KAAKF,IAAL,CAAX,CAAZ,CAFgC;AAIjC,OAJD,MAIO,IAAK7B,KAAK,CAACC,OAAN,CAAc,KAAK4B,IAAL,CAAd,CAAL,EAAiC;AACtC;AACAJ,QAAAA,GAAG,CAACI,IAAD,CAAH,GAAY,KAAKA,IAAL,EAAWG,KAAX,EAAZ;AACD,OAHM,MAGA;AACL;AACAP,QAAAA,GAAG,CAACI,IAAD,CAAH,GAAY,KAAKA,IAAL,CAAZ;AACD,OAZ+C;;;AAchDJ,MAAAA,GAAG,CAACvC,MAAJ,GAAa;AACXC,QAAAA,GAAG,EAAE,KAAKD,MAAL,CAAYC,GADN;AAEXC,QAAAA,KAAK,EAAE,KAAKF,MAAL,CAAYE,KAFR;AAGXC,QAAAA,MAAM,EAAE,KAAKH,MAAL,CAAYG,MAHT;AAIXC,QAAAA,IAAI,EAAE,KAAKJ,MAAL,CAAYI,IAJP;AAKXC,QAAAA,QAAQ,EAAE,oBAAW;AAAC,iBAAO,OAAK,KAAKJ,GAAV,GAAc,KAAd,GAAoB,KAAKG,IAAzB,GAA8B,KAA9B,GAAoC,KAAKD,MAAzC,GAAgD,KAAhD,GAAsD,KAAKD,KAAlE;AAAyE;AALpF,OAAb;AAOD,KArBD;AAsBA,WAAOqC,GAAP;AACD;;AACDlC,EAAAA,QAAQ,GAAG;AACT,QAAI0C,IAAI,GAAG,EAAX;AACAP,IAAAA,MAAM,CAACC,mBAAP,CAA2B,IAA3B,EAAiCC,OAAjC,CAA0CC,IAAI,IAAI;AAChD;AACAI,MAAAA,IAAI,2BAAoBJ,IAApB,gBAA8BK,IAAI,CAACC,SAAL,CAAe,KAAKN,IAAL,CAAf,CAA9B,OAAJ;AACD,KAHD;AAIA,WAAOI,IAAP;AACD;;AA9K4B;MAiLlBG,WAAW,GAAGC,MAAA,CAAU,IAAV;MACdC,SAAS,GAAGD,MAAA,CAAU,KAAV;MACZxE,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAS0E,CAAT,EAA4B;AAC1D,SAAO,CAAC,CAAD,GAAGA,CAAH,IAAQA,CAAC,GAAC,CAAV,IAAeA,CAAC,KAAK,CAArB,GAAyBD,SAAS,CAACC,CAAD,CAAlC,GAAwCH,WAAW,CAACG,CAAD,CAA1D;AACD;MAEYC,iBAAiB,GAAGH,SAAA,CAAa,KAAb;MACpBI,YAAY,GAAGJ,SAAA,CAAa,KAAb;MACfK,YAAY,GAAGL,SAAA,CAAa,OAAb;MACfM,UAAU,GAAGN,SAAA,CAAa,OAAb;MACbO,SAAS,GAAGP,SAAA,CAAa,OAAb;MACZQ,WAAW,GAAGR,SAAA,CAAa,OAAb;MACdS,UAAU,GAAGT,SAAA,CAAa,IAAb;MAEb1E,eAAe,GAAG,SAAlBA,eAAkB,CAASoF,IAAT,EAA6B;AAC1D,SAAO,CAACV,SAAA,CAAaU,IAAb,IAAqBA,IAArB,GAA4BP,iBAA5B,GACFH,SAAA,CAAaU,IAAb,IAAqBA,IAArB,GAA4BN,YAA5B,GACAJ,OAAA,CAAWU,IAAX,IAAmBA,IAAnB,GAA0BL,YAA1B,GACAL,MAAA,CAAUU,IAAV,IAAkBA,IAAlB,GAAyBJ,UAAzB,GACAN,QAAA,CAAYU,IAAZ,IAAoBA,IAApB,GAA4BH,SAA5B,GACAP,OAAA,CAAWU,IAAX,IAAmBA,IAAnB,GAA0BF,WAA1B,GACAC,UANC,EAMWC,IANX,CAAP;AAOD;;;;"}