{"version":3,"file":"fdsnevent.js","sources":["../../src/fdsnevent.js"],"sourcesContent":["// @flow\n\n/*\n * Philip Crotwell\n * University of South Carolina, 2019\n * http://www.seis.sc.edu\n */\n\nimport { moment } from 'moment';\nimport { Quake, USGS_HOST, parseQuakeML } from './quakeml';\nimport {XML_MIME, TEXT_MIME, StartEndDuration, makeParam, doFetchWithTimeout, defaultFetchInitObj} from './util.js';\n\n// special due to flow\nimport {checkProtocol, toIsoWoZ, hasArgs, hasNoArgs, isDef, isObject,\n        isStringArg, isNonEmptyStringArg, isNumArg, checkStringOrDate} from './util';\n\n/**\n * Major version of the FDSN spec supported here.\n * Currently is 1.\n */\nexport const SERVICE_VERSION = 1;\n/**\n * Service name as used in the FDSN DataCenters registry,\n * http://www.fdsn.org/datacenters\n */\nexport const SERVICE_NAME = `fdsnws-event-${SERVICE_VERSION}`;\n\nexport { USGS_HOST };\n\nexport const FAKE_EMPTY_XML = '<?xml version=\"1.0\"?><q:quakeml xmlns=\"http://quakeml.org/xmlns/bed/1.2\" xmlns:q=\"http://quakeml.org/xmlns/quakeml/1.2\"><eventParameters publicID=\"quakeml:fake/empty\"></eventParameters></q:quakeml>';\n\n/**\n * Query to a FDSN Event web service.\n *\n * @see http://www.fdsn.org/webservices/\n *\n * @param host optional host to connect to, defaults to USGS\n */\nexport class EventQuery {\n  /** @private */\n  _specVersion: number;\n  /** @private */\n  _protocol: string;\n  /** @private */\n  _host: string;\n  /** @private */\n  _port: number;\n  /** @private */\n  _nodata: number;\n  /** @private */\n  _eventId: string;\n  /** @private */\n  _startTime: moment;\n  /** @private */\n  _endTime: moment;\n  /** @private */\n  _updatedAfter: moment;\n  /** @private */\n  _minMag: number;\n  /** @private */\n  _maxMag: number;\n  /** @private */\n  _magnitudeType: string;\n  /** @private */\n  _minDepth: number;\n  /** @private */\n  _maxDepth: number;\n  /** @private */\n  _minLat: number;\n  /** @private */\n  _maxLat: number;\n  /** @private */\n  _minLon: number;\n  /** @private */\n  _maxLon: number;\n  /** @private */\n  _latitude: number;\n  /** @private */\n  _longitude: number;\n  /** @private */\n  _minRadius: number;\n  /** @private */\n  _maxRadius: number;\n  /** @private */\n  _includeArrivals: boolean;\n  /** @private */\n  _includeAllOrigins: boolean;\n  /** @private */\n  _includeAllMagnitudes: boolean;\n  /** @private */\n  _limit: number;\n  /** @private */\n  _offset: number;\n  /** @private */\n  _orderBy: string;\n  /** @private */\n  _contributor: string;\n  /** @private */\n  _catalog: string;\n  /** @private */\n  _format: string;\n  /** @private */\n  _timeoutSec: number;\n  constructor(host?: string) {\n    this._specVersion = 1;\n    this._protocol = checkProtocol();\n    this.host(host);\n    if (! isNonEmptyStringArg(host)) {\n      this._host = USGS_HOST;\n    }\n    this._port = 80;\n    this._timeoutSec = 30;\n  }\n  /**\n   * Gets/Sets the version of the fdsnws spec, 1 is currently the only value.\n   *  Setting this is probably a bad idea as the code may not be compatible with\n   *  the web service.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  specVersion(value?: number): number | EventQuery {\n    if (hasArgs(value)) {\n      this._specVersion = value;\n      return this;\n    } else if (hasNoArgs(value)) {\n      return this._specVersion;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Gets/Sets the protocol, http or https. This should match the protocol\n   *  of the page loaded, but is autocalculated and generally need not be set.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  protocol(value?: string): string | EventQuery {\n    if (isStringArg(value)) {\n      this._protocol = value;\n      return this;\n    } else if (hasNoArgs(value)) {\n      return this._protocol;\n    } else {\n      throw new Error('value argument is optional or string, but was '+typeof value);\n    }\n  }\n  /**\n   * Gets/Sets the remote host to connect to.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  host(value?: string): string | EventQuery {\n    if (isStringArg(value)) {\n      this._host = value;\n      return this;\n    } else if (hasNoArgs(value)) {\n      return this._host;\n    } else {\n      throw new Error('value argument is optional or string, but was '+typeof value);\n    }\n  }\n  /**\n   * Gets/Sets the remote port to connect to.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  port(value?: number): number | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._port;\n    } else if (isNumArg(value)) {\n      this._port = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Gets/Sets the nodata parameter, usually 404 or 204 (default), controlling\n   * the status code when no matching data is found by the service.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  nodata(value?: number): number | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._nodata;\n    } else if (hasArgs(value)) {\n      this._nodata = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the eventid query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  eventId(value?: string): string | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._eventId;\n    } else if (isStringArg(value)) {\n      this._eventId = value;\n      return this;\n    } else  {\n      throw new Error('value argument is optional or string, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the starttime query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  startTime(value?: moment): moment | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._startTime;\n    } else if (hasArgs(value)) {\n      this._startTime = checkStringOrDate(value);\n      return this;\n    } else {\n      throw new Error('value argument is optional or moment or string, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the endtime query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  endTime(value?: moment): moment | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._endTime;\n    } else if (hasArgs(value)) {\n      this._endTime = checkStringOrDate(value);\n      return this;\n    } else {\n      throw new Error('value argument is optional or moment or string, but was '+typeof value);\n    }\n  }\n  /**\n   * Sets startTime and endTime using the given time window\n   *\n   * @param   se time window\n   * @returns     this\n   */\n  timeWindow(se: StartEndDuration) {\n    this.startTime(se.startTime);\n    this.endTime(se.endTime);\n    return this;\n  }\n  /**\n   * Get/Set the updatedafter query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  updatedAfter(value?: moment): moment | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._updatedAfter;\n    } else if (hasArgs(value)) {\n      this._updatedAfter = checkStringOrDate(value);\n      return this;\n    } else {\n      throw new Error('value argument is optional or moment or string, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the minmag query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  minMag(value?: number): number | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._minMag;\n    } else if (isNumArg(value)) {\n      this._minMag = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the maxmag query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  maxMag(value?: number): number | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._maxMag;\n    } else if (isNumArg(value)) {\n      this._maxMag = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the magnitudetype query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  magnitudeType(value?: string): string | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._magnitudeType;\n    } else if (isStringArg(value)) {\n      this._magnitudeType = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or string, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the mindepth query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  minDepth(value?: number): number | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._minDepth;\n    } else if (isNumArg(value)) {\n      this._minDepth = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the maxdepth query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  maxDepth(value?: number): number | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._maxDepth;\n    } else if (isNumArg(value)) {\n      this._maxDepth = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the minlat query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  minLat(value?: number): number | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._minLat;\n    } else if (isNumArg(value)) {\n      this._minLat = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the maxlat query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  maxLat(value?: number): number | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._maxLat;\n    } else if (isNumArg(value)) {\n      this._maxLat = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the minlon query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  minLon(value?: number): number | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._minLon;\n    } else if (isNumArg(value)) {\n      this._minLon = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the maxlon query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  maxLon(value?: number): number | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._maxLon;\n    } else if (isNumArg(value)) {\n      this._maxLon = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the latitude query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  latitude(value?: number): number | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._latitude;\n    } else if (isNumArg(value)) {\n      this._latitude = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the longitude query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  longitude(value?: number): number | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._longitude;\n    } else if (isNumArg(value)) {\n      this._longitude = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the minradius query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  minRadius(value?: number): number | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._minRadius;\n    } else if (isNumArg(value)) {\n      this._minRadius = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the maxradius query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  maxRadius(value?: number): number | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._maxRadius;\n    } else if (isNumArg(value)) {\n      this._maxRadius = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the includearrivals query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  includeArrivals(value?: boolean): boolean | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._includeArrivals;\n    } else if (hasArgs(value)) {\n      this._includeArrivals = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or boolean, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the includeallorigins query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  includeAllOrigins(value?: boolean): boolean | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._includeAllOrigins;\n    } else if (hasArgs(value)) {\n      this._includeAllOrigins = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or boolean, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the includeallmagnitudes query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  includeAllMagnitudes(value?: boolean): boolean | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._includeAllMagnitudes;\n    } else if (hasArgs(value)) {\n      this._includeAllMagnitudes = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or boolean, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the format query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  format(value?: string): string | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._format;\n    } else if (isStringArg(value)) {\n      this._format = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or string, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the limit query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  limit(value?: number): number | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._limit;\n    } else if (isNumArg(value)) {\n      this._limit = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the offset query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  offset(value?: number): number | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._offset;\n    } else if (isNumArg(value)) {\n      this._offset = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the orderby query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  orderBy(value?: string): string | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._orderBy;\n    } else if (isStringArg(value)) {\n      this._orderBy = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or string, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the catalog query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  catalog(value?: string): string | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._catalog;\n    } else if (isStringArg(value)) {\n      this._catalog = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or string, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the contributor query parameter.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  contributor(value?: string): string | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._contributor;\n    } else if (isStringArg(value)) {\n      this._contributor = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or string, but was '+typeof value);\n    }\n  }\n  /**\n   * Get/Set the timeout in seconds for the request. Default is 30.\n   *\n   * @param value optional new value if setting\n   * @returns new value if getting, this if setting\n   */\n  timeout(value?: number): number | EventQuery {\n    if (hasNoArgs(value)) {\n      return this._timeoutSec;\n    } else if (isNumArg(value)) {\n      this._timeoutSec = value;\n      return this;\n    } else {\n      throw new Error('value argument is optional or number, but was '+typeof value);\n    }\n  }\n  /**\n   * Checks to see if any parameter that would limit the data\n   * returned is set. This is a crude, coarse check to make sure\n   * the client doesn't ask for EVERYTHING the server has.\n   *\n   * @returns true is some parameter is set\n   */\n  isSomeParameterSet(): boolean {\n    return isDef(this._eventId) ||\n      isDef(this._startTime) ||\n      isDef(this._endTime) ||\n      isDef(this._minLat) ||\n      isDef(this._maxLat) ||\n      isDef(this._minLon) ||\n      isDef(this._maxLon) ||\n      isDef(this._latitude) ||\n      isDef(this._longitude) ||\n      isDef(this._minRadius) ||\n      isDef(this._maxRadius) ||\n      isDef(this.minDepth) ||\n      isDef(this.maxDepth) ||\n      isDef(this.limit) ||\n      isDef(this.minMag) ||\n      isDef(this.maxMag) ||\n      isDef(this.updatedAfter) ||\n      isDef(this.catalog) ||\n      isDef(this.contributor);\n  }\n  /**\n   * Queries the remote service and parses the returned xml.\n   *\n   *  @returns Promise to an Array of Quake objects.\n   */\n  query(): Promise<Array<Quake>> {\n    return this.queryRawXml().then(rawXml => {\n        return parseQuakeML(rawXml, this._host);\n    });\n  }\n  /**\n   * Queries the remote server, to get QuakeML xml.\n   *\n   * @returns xml Document\n   */\n  queryRawXml(): Promise<Document> {\n    let mythis = this;\n    const url = this.formURL();\n    const fetchInit = defaultFetchInitObj(XML_MIME);\n    return doFetchWithTimeout(url, fetchInit, this._timeoutSec * 1000 )\n    .then(response => {\n        if (response.status === 200) {\n          return response.text();\n        } else if (response.status === 204 || (mythis.nodata() && response.status === mythis.nodata())) {\n          // 204 is nodata, so successful but empty\n          return FAKE_EMPTY_XML;\n        } else {\n          throw new Error(`Status not successful: ${response.status}`);\n        }\n    }).then(function(rawXmlText) {\n      return new DOMParser().parseFromString(rawXmlText, XML_MIME);\n    });\n  }\n  /**\n   * Forms the basic URL to contact the web service, without any query paramters\n   *\n   * @returns the url\n   */\n  formBaseURL(): string {\n      let colon = \":\";\n      if (! this.host || this._host === USGS_HOST) {\n        this._host = USGS_HOST;\n        // usgs does 301 moved permanently to https\n        this._protocol = 'https:';\n      }\n      if (this._protocol.endsWith(colon)) {\n        colon = \"\";\n      }\n      return this._protocol+colon+\"//\"+this._host+(this._port===80?\"\":(\":\"+this._port))+\"/fdsnws/event/\"+this._specVersion;\n  }\n  /**\n   * Forms the URL to get catalogs from the web service, without any query paramters\n   *\n   * @returns the url\n   */\n  formCatalogsURL(): string {\n    return this.formBaseURL()+\"/catalogs\";\n  }\n  /**\n   * Queries the remote web service to get known catalogs\n   *\n   * @returns Promise to Array of catalog names\n   */\n  queryCatalogs(): Promise<Array<string>> {\n    let mythis = this;\n    let url = mythis.formCatalogsURL();\n    const fetchInit = defaultFetchInitObj(XML_MIME);\n    return doFetchWithTimeout(url, fetchInit, this._timeoutSec * 1000 )\n      .then(response => {\n          if (response.status === 200) {\n            return response.text();\n          } else {\n            throw new Error(`Status not 200: ${response.status}`);\n          }\n      }).then(function(rawXmlText) {\n        return new DOMParser().parseFromString(rawXmlText, XML_MIME);\n      }).then(function(rawXml) {\n          // for flow\n          if ( ! rawXml) { throw new Error(\"raw xml from DOMParser is null.\");}\n          let top = rawXml.documentElement;\n          // for flow\n          if ( ! top) { throw new Error(\"documentElement in xml from DOMParser is null.\");}\n          let catalogArray = top.getElementsByTagName(\"Catalog\");\n          let out = [];\n          if (catalogArray){\n            for (let i=0; i<catalogArray.length; i++) {\n              // for flow\n              let item = catalogArray.item(i);\n              if (item) {\n                out.push(item.textContent);\n              }\n            }\n          }\n          return out;\n      });\n  }\n  /**\n   * Forms the URL to get contributors from the web service, without any query paramters\n   *\n   * @returns the url\n   */\n  formContributorsURL(): string {\n    return this.formBaseURL()+\"/contributors\";\n  }\n  /**\n   * Queries the remote web service to get known contributors\n   *\n   * @returns Promise to Array of contributor names\n   */\n  queryContributors(): Promise<Array<string>> {\n    let url = this.formContributorsURL();\n    const fetchInit = defaultFetchInitObj(XML_MIME);\n    return doFetchWithTimeout(url, fetchInit, this._timeoutSec * 1000 )\n      .then(response => {\n          if (response.status === 200) {\n            return response.text();\n          } else {\n            throw new Error(`Status not 200: ${response.status}`);\n          }\n      }).then(function(rawXmlText) {\n        return new DOMParser().parseFromString(rawXmlText, XML_MIME);\n      }).then(function(rawXml) {\n          let top = rawXml.documentElement;\n          // for flow\n          if ( ! top) { throw new Error(\"documentElement in xml from DOMParser is null.\");}\n          let contributorArray = top.getElementsByTagName(\"Contributor\");\n          let out = [];\n          if (contributorArray){\n            for (let i=0; i<contributorArray.length; i++) {\n              // for flow\n              let item = contributorArray.item(i);\n              if (item) {\n                out.push(item.textContent);\n              }\n            }\n          }\n          return out;\n      });\n  }\n  /**\n   * Forms the URL to get version from the web service, without any query paramters\n   *\n   * @returns the url\n   */\n  formVersionURL(): string {\n    return this.formBaseURL()+\"/version\";\n  }\n  /**\n   * Queries the remote web service to get its version\n   *\n   * @returns Promise to version string\n   */\n  queryVersion(): Promise<string> {\n    let url = this.formVersionURL();\n    const fetchInit = defaultFetchInitObj(TEXT_MIME);\n    return doFetchWithTimeout(url, fetchInit, this._timeoutSec * 1000 )\n      .then(response => {\n          if (response.status === 200) {\n            return response.text();\n          } else {\n            throw new Error(`Status not 200: ${response.status}`);\n          }\n      });\n  }\n  /**\n   * Form URL to query the remote web service, encoding the query parameters.\n   *\n   * @returns url\n   */\n  formURL(): string {\n    let colon = \":\";\n    if (this._protocol.endsWith(colon)) {\n      colon = \"\";\n    }\n    let url = this.formBaseURL()+\"/query?\";\n    if (this._eventId) { url = url+makeParam(\"eventid\", this.eventId());}\n    if (this._startTime) { url = url+makeParam(\"starttime\", toIsoWoZ(this.startTime()));}\n    if (this._endTime) { url = url+makeParam(\"endtime\", toIsoWoZ(this.endTime()));}\n    if (isNumArg(this._minMag)) { url = url+makeParam(\"minmag\", this.minMag());}\n    if (isNumArg(this._maxMag)) { url = url+makeParam(\"maxmag\", this.maxMag());}\n    if (isStringArg(this._magnitudeType)) { url = url+makeParam(\"magnitudetype\", this.magnitudeType());}\n    if (isNumArg(this._minDepth)) { url = url+makeParam(\"mindepth\", this.minDepth());}\n    if (isNumArg(this._maxDepth)) { url = url+makeParam(\"maxdepth\", this.maxDepth());}\n    if (isNumArg(this._minLat)) { url = url+makeParam(\"minlat\", this.minLat());}\n    if (isNumArg(this._maxLat)) { url = url+makeParam(\"maxlat\", this.maxLat());}\n    if (isNumArg(this._minLon)) { url = url+makeParam(\"minlon\", this.minLon());}\n    if (isNumArg(this._maxLon)) { url = url+makeParam(\"maxlon\", this.maxLon());}\n    if (isNumArg(this._minRadius) || isNumArg(this._maxRadius)) {\n      if (isNumArg(this._latitude) && isNumArg(this._longitude)) {\n        url = url+makeParam(\"latitude\", this.latitude())+makeParam(\"longitude\", this.longitude());\n        if (isNumArg(this._minRadius)) { url = url+makeParam(\"minradius\", this.minRadius());}\n        if (isNumArg(this._maxRadius)) { url = url+makeParam(\"maxradius\", this.maxRadius());}\n      } else {\n        throw new Error(\"Cannot use minRadius or maxRadius without latitude and longitude: lat=\"+this._latitude+\" lon=\"+this._longitude);\n      }\n    }\n    if (this._includeArrivals) {\n      if (this._host !== USGS_HOST) {\n        url = url+\"includearrivals=true&\";\n      } else {\n        // USGS does not support includearrivals, but does actually\n        // include the arrivals for an eventid= style query\n        if (this._eventId) {\n          // ok, works without the param\n        } else {\n          throw new Error(\"USGS host, earthquake.usgs.gov, does not support includearrivals parameter.\");\n        }\n      }\n    }\n    if (isObject(this._updatedAfter)) { url = url+makeParam(\"updatedafter\", this.updatedAfter());}\n    if (isDef(this._includeAllOrigins)) { url = url+makeParam(\"includeallorigins\", this.includeAllOrigins());}\n    if (isDef(this._includeAllMagnitudes)) { url = url+makeParam(\"includeallmagnitudes\", this.includeAllMagnitudes());}\n    if (isStringArg(this._format)) { url = url+makeParam(\"format\", this.format());}\n    if (isNumArg(this._limit)) { url = url+makeParam(\"limit\", this.limit());}\n    if (isNumArg(this._offset)) { url = url+makeParam(\"offset\", this.offset());}\n    if (isStringArg(this._orderBy)) { url = url+makeParam(\"orderby\", this.orderBy());}\n    if (isStringArg(this._catalog)) { url = url+makeParam(\"catalog\", this.catalog());}\n    if (isStringArg(this._contributor)) { url = url+makeParam(\"contributor\", this.contributor());}\n\n    if (isDef(this._nodata)) { url = url+makeParam(\"nodata\", this.nodata());}\n    if (url.endsWith('&') || url.endsWith('?')) {\n      url = url.substr(0, url.length-1); // zap last & or ?\n    }\n    return url;\n  }\n\n}\n"],"names":["SERVICE_VERSION","SERVICE_NAME","FAKE_EMPTY_XML","EventQuery","constructor","host","_specVersion","_protocol","checkProtocol","isNonEmptyStringArg","_host","USGS_HOST","_port","_timeoutSec","specVersion","value","hasArgs","hasNoArgs","Error","protocol","isStringArg","port","isNumArg","nodata","_nodata","eventId","_eventId","startTime","_startTime","checkStringOrDate","endTime","_endTime","timeWindow","se","updatedAfter","_updatedAfter","minMag","_minMag","maxMag","_maxMag","magnitudeType","_magnitudeType","minDepth","_minDepth","maxDepth","_maxDepth","minLat","_minLat","maxLat","_maxLat","minLon","_minLon","maxLon","_maxLon","latitude","_latitude","longitude","_longitude","minRadius","_minRadius","maxRadius","_maxRadius","includeArrivals","_includeArrivals","includeAllOrigins","_includeAllOrigins","includeAllMagnitudes","_includeAllMagnitudes","format","_format","limit","_limit","offset","_offset","orderBy","_orderBy","catalog","_catalog","contributor","_contributor","timeout","isSomeParameterSet","isDef","query","queryRawXml","then","rawXml","parseQuakeML","mythis","url","formURL","fetchInit","defaultFetchInitObj","XML_MIME","doFetchWithTimeout","response","status","text","rawXmlText","DOMParser","parseFromString","formBaseURL","colon","endsWith","formCatalogsURL","queryCatalogs","top","documentElement","catalogArray","getElementsByTagName","out","i","length","item","push","textContent","formContributorsURL","queryContributors","contributorArray","formVersionURL","queryVersion","TEXT_MIME","makeParam","toIsoWoZ","isObject","substr"],"mappings":"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"}