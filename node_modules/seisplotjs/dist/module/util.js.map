{"version":3,"file":"util.js","sources":["../../src/util.js"],"sourcesContent":["// @flow\n\n/*\n * Philip Crotwell\n * University of South Carolina, 2019\n * http://www.seis.sc.edu\n */\n\n\nimport moment from 'moment';\nimport * as d3 from 'd3';\n\n//reexport\nexport { moment, };\n\n\nimport RSVP from 'rsvp';\n\nRSVP.on('error', function(reason: string) {\n  // eslint-disable-next-line no-console\n  console.assert(false, reason);\n});\n\n//reexport\nexport {RSVP, };\n\nexport const XML_MIME = \"application/xml\";\nexport const JSON_MIME = \"application/json\";\nexport const JSONAPI_MIME = \"application/vnd.api+json\";\nexport const TEXT_MIME = \"text/plain\";\n\n// flow predicate %check functions\nexport function hasArgs(value: any): boolean %checks {\n  return arguments.length !== 0 && typeof value !== 'undefined';\n}\nexport function hasNoArgs(value: any): boolean %checks {\n  return arguments.length === 0 || typeof value === 'undefined';\n}\nexport function isStringArg(value: any): boolean %checks {\n  return arguments.length !== 0 && typeof value === 'string';\n}\nexport function isNumArg(value: any): boolean %checks {\n  return typeof value === 'number';\n}\nexport function isNonEmptyStringArg(value: any): boolean %checks {\n  return arguments.length !== 0 && isStringArg(value) && value.length !== 0;\n}\nexport function isObject (obj: mixed): boolean %checks {\n  return obj !== null && typeof obj === 'object';\n}\nexport function isDef(v: mixed): boolean %checks {\n  return typeof v !== 'undefined' && v !== null;\n}\n\n/**\n * Converts entire DataView to a string as utf-8.\n *\n * @param   dataView bytes to convert\n * @returns           the string\n */\nexport function dataViewToString(dataView: DataView) {\n  let out = \"\";\n  for (let i=0; i< dataView.byteLength; i++) {\n    out += String.fromCharCode(dataView.getUint8(i));\n  }\n  return out;\n}\n\n/**\n * Log a message to the console. Put here to limit lint console errors\n * for the times we really do want to use console.log. Will also append a\n * p tag to a div#debug if it exists.\n *\n * @param   msg the message to log\n */\nexport function log(msg: string): void {\n  // eslint-disable-next-line no-console\n  if (console) {console.log(`${stringify(msg)}`);}\n  d3.select(\"div#debug\").append(\"p\").text(`${stringify(msg)}`);\n}\n\n/**\n * String representation of input. This is kind of dumb but makes\n *  flow happier.\n *\n * @param value any kind of thing that can be turned into a string\n * @returns a string\n */\nexport function stringify(value: mixed): string {\n  if (typeof value === 'string') {\n    return value;\n  } else if (typeof value === 'number') {\n    return value.toString();\n  } else if (typeof value === 'boolean') {\n    return value ? \"true\" : \"false\";\n  } else if (typeof value === 'undefined') {\n    return \"undefined\";\n  } else if (typeof value === 'function') {\n    return \"function \"+value.name;\n  } else if (typeof value === 'object') {\n    if (value) {\n      if (value instanceof moment) {\n        return value.toISOString();\n      } else {\n        return value.constructor.name+ \" \"+value.toString();\n      }\n    } else {\n      return \"null\";\n    }\n// symbol not yet supported by flow\n//  } else if (typeof value === 'symbol') {\n//    return value.toString();\n  } else {\n    return \"<unknown\"+(typeof value)+\"???>\";\n  }\n}\n\n/**\n * Calculates offset of remote server versus local time. It is assumed that the\n * argument was acquired as close in time to calling this as possible.\n *\n * @param  serverTimeUTC now as reported by remote server\n * @returns offset in seconds to now on local machine\n */\nexport function calcClockOffset(serverTimeUTC: moment): number {\n  return moment.utc().diff(serverTimeUTC, 'seconds', true);\n}\n\n/**\n * Any two of startTime, endTime and duration can be specified, or just duration which\n * then assumes endTime is now.\n * startTime and endTime are moment objects, duration is in seconds.\n * clockOffset is the seconds that should be subtracted from the computer time\n * to get real world time, ie computerUTC - UTC\n * or moment.utc().diff(serverTimeUTC, 'seconds', true).\n * default is zero.\n */\nexport class StartEndDuration {\n  _startTime: moment;\n  _endTime: moment;\n  _duration: moment.duration;\n  _clockOffset: moment.duration;\n  constructor(startTime: moment | null, endTime: moment | null, duration: moment.duration | number | null =null, clockOffset?: number | null =0) {\n    if (isDef(duration)) {\n      if ((typeof duration === \"string\" || duration instanceof String)) {\n        if (duration.charAt(0) === 'P') {\n          this._duration = moment.duration(duration);\n        } else {\n          this._duration = moment.duration(Number.parseFloat(duration), 'seconds');\n        }\n      } else if ((typeof duration === \"number\" || duration instanceof Number)) {\n        this._duration = moment.duration(duration, 'seconds');\n      } else if ((moment.isDuration(duration))) {\n        this._duration = moment.duration(duration);\n      } else {\n        throw new Error(`Unknown type for duration: ${typeof duration}  ${JSON.stringify(duration)}`);\n      }\n    }\n    if (startTime && endTime) {\n      this._startTime = checkStringOrDate(startTime);\n      this._endTime = checkStringOrDate(endTime);\n      this._duration = moment.duration(this.endTime.diff(this.startTime));\n    } else if (startTime && this._duration) {\n      this._startTime = checkStringOrDate(startTime);\n      this._endTime = moment.utc(this.startTime).add(this.duration);\n    } else if (endTime && this._duration) {\n      this._endTime = checkStringOrDate(endTime);\n      this._startTime = moment.utc(this.endTime).subtract(this.duration);\n    } else if (this._duration) {\n      if (clockOffset === undefined) {\n        this._clockOffset = moment.duration(0, 'seconds');\n      } else if (clockOffset instanceof Number) {\n        this._clockOffset = moment.duration(clockOffset, 'seconds');\n      } else {\n        this._clockOffset = clockOffset;\n      }\n      this._endTime = moment.utc().subtract(clockOffset);\n      this._startTime = moment.utc(this.endTime).subtract(this.duration);\n    } else {\n      throw new Error(\"need some combination of startTime, endTime and duration\");\n    }\n  }\n  get start() {\n    return this._startTime;\n  }\n  get startTime() {\n    return this._startTime;\n  }\n  get end() {\n    return this._endTime;\n  }\n  get endTime() {\n    return this._endTime;\n  }\n  get duration() {\n    return this._duration;\n  }\n  get clockOffset() {\n    return this._clockOffset;\n  }\n  /**\n   * Check if this time window contains the given moment. Equality to start\n   * or end is considered being contained in.\n   *\n   * @param   other moment to check\n   * @returns        true if moment is inside this time range\n   */\n  contains(other: moment | StartEndDuration): boolean {\n    if (other instanceof moment){\n      if (this.startTime.isAfter(other)\n          || this.endTime.isBefore(other)) {\n        return false;\n      }\n      return true;\n    } else if (other instanceof StartEndDuration) {\n      return this.contains(other.startTime) && this.contains(other.endTime);\n    } else {\n      throw new Error(\"expect moment or StartEndDuration\");\n    }\n  }\n  overlaps(other: StartEndDuration): boolean {\n    if (this.startTime.isAfter(other.endTime)\n        || this.endTime.isBefore(other.startTime)) {\n      return false;\n    }\n    return true;\n  }\n  intersect(other: StartEndDuration): StartEndDuration | null {\n    let out = null;\n    if (this.overlaps(other)) {\n      let tb = this.startTime;\n      if (tb.isBefore(other.startTime)) {\n        tb = other.startTime;\n      }\n      let te = this.endTime;\n      if (te.isAfter(other.endTime)) {\n        te = other.endTime;\n      }\n      out = new StartEndDuration(tb, te);\n    }\n    return out;\n  }\n  union(other: StartEndDuration): StartEndDuration {\n    let tb = this.startTime;\n    if (tb.isAfter(other.startTime)) {\n      tb = other.startTime;\n    }\n    let te = this.endTime;\n    if (te.isBefore(other.endTime)) {\n      te = other.endTime;\n    }\n    return new StartEndDuration(tb, te);\n  }\n  toString() {\n    return `StartEndDuration: ${toIsoWoZ(this.startTime)} to ${toIsoWoZ(this.endTime)} ${this.duration}`;\n  }\n}\n\n/**\n * converts the input value is a moment, throws Error if not\n * a string, Date or moment. Zero length string or \"now\" return\n * current time.\n *\n * @param d 'now', string time, Date, number of milliseconds since epoch, or moment\n * @returns moment created from argument\n */\nexport function checkStringOrDate(d: any): moment {\n  if (moment.isMoment(d)) {\n    return d;\n  } else if (d instanceof Date) {\n      return moment.utc(d);\n  } else if (d instanceof Number || typeof d === \"number\") {\n    return moment.utc(d);\n  } else if (d instanceof String || typeof d === \"string\") {\n    let lc = d.toLowerCase();\n    if (d.length === 0 || lc === \"now\") {\n      return moment.utc();\n    } else {\n      return moment.utc(d);\n    }\n  }\n  throw new Error(\"unknown date type: \"+d+\" \"+(typeof d));\n}\n\n\n/**\n * Converts name and value into a html query parameter, with appending ampersand.\n *\n * @param   name parameter name\n * @param   val  parameter value\n * @returns      formated query parameter\n */\nexport function makeParam(name: string, val: mixed): string {\n  return name+\"=\"+encodeURIComponent(stringify(val))+\"&\";\n}\n\n/**\n * converts to ISO8601 but removes the trailing Z as FDSN web services\n * do not allow that.\n *\n * @param  date moment to convert to string\n * @returns ISO8601 without timezone Z\n **/\nexport function toIsoWoZ(date: moment): string {\n  let out = date.toISOString();\n  return out.substring(0, out.length-1);\n}\n\n/**\n * @returns the protocol, http or https for the document if possible.\n **/\nexport function checkProtocol(): string {\n  let _protocol = 'http:';\n  if (typeof document !== 'undefined' && document.location && \"https:\" === document.location.protocol) {\n    _protocol = 'https:';\n  }\n  return _protocol;\n}\n\n/**\n * Create default fetch init object with the given mimeType. Sets\n * no-cache, follow redirects, cors mode, referrer as seisplotjs and mimetype as a header.\n *\n * @param   mimeType requested mime type\n * @returns           object with fetch configuration parameters\n */\nexport function defaultFetchInitObj(mimeType?: string): { [key: string]: any } {\n  let headers = {};\n  if (isStringArg(mimeType)) {\n    headers.Accept = mimeType;\n  }\n  return {\n        cache: 'no-cache',\n        redirect: 'follow', // manual, *follow, error\n        mode: \"cors\",\n        referrer: \"seisplotjs\",\n        headers: headers\n  };\n}\n\n/**\n * Does a fetch, but times out if it takes too long.\n *\n * @param   url        url to retrieve\n * @param   fetchInit  fetch configuration, initialization\n * @param   timeoutSec maximum time to wait in seconds\n * @returns             promise to the result\n * @throws Error if time out or other failure\n */\nexport function doFetchWithTimeout(url: string | URL,\n                                   fetchInit?: { [key: string]: any },\n                                   timeoutSec?: number): Promise<Response> {\n  const controller = new AbortController();\n  const signal = controller.signal;\n  if ( ! isDef(fetchInit)) {\n    fetchInit = defaultFetchInitObj();\n  }\n  if ( ! isDef(timeoutSec) ){\n    timeoutSec = 30;\n  }\n  setTimeout(() => controller.abort(), timeoutSec * 1000);\n  fetchInit.signal = signal;\n  let absoluteUrl: URL;\n  if (isStringArg(url)) {\n    absoluteUrl = new URL(url, document.URL);\n  } else if (url instanceof URL) {\n    absoluteUrl = url;\n  } else {\n    throw new Error(`url must be string or URL, ${stringify(url)}`);\n  }\n  log(`attempt to fetch ${stringify(absoluteUrl)}`);\n  return fetch(absoluteUrl, fetchInit)\n  .catch(err => {\n    log(\"fetch failed, possible CORS or PrivacyBadger or NoScript?\");\n    throw err;\n  }).then(function(response) {\n    if(response.ok) {\n      return response;\n    }\n    // $FlowFixMe\n    throw new Error(`fetch response was not ok. ${response.ok} ${response.status}`);\n  });\n}\n\n\n/**\n * Recursively calculates the mean of a slice of an array. This helps with\n * very long seismograms to equally weight each sample point without overflowing.\n *\n * @param   dataSlice slice of a seismogram\n * @param   totalPts  number of points in the original seismogram\n * @returns            sum of slice data points divided by totalPts\n */\nexport function meanOfSlice(dataSlice: Int32Array | Float32Array | Float64Array, totalPts: number ): number {\n  if (dataSlice.length < 8) {\n    return dataSlice.reduce(function(acc, val) {\n       return acc + val;\n    }, 0) / totalPts;\n  } else {\n    let byTwo = Math.floor(dataSlice.length / 2);\n    return meanOfSlice(dataSlice.slice(0, byTwo), totalPts) + meanOfSlice(dataSlice.slice(byTwo, dataSlice.length), totalPts);\n  }\n}\n"],"names":["RSVP","on","reason","console","assert","XML_MIME","JSON_MIME","JSONAPI_MIME","TEXT_MIME","hasArgs","value","arguments","length","hasNoArgs","isStringArg","isNumArg","isNonEmptyStringArg","isObject","obj","isDef","v","dataViewToString","dataView","out","i","byteLength","String","fromCharCode","getUint8","log","msg","stringify","d3","append","text","toString","name","moment","toISOString","constructor","calcClockOffset","serverTimeUTC","utc","diff","StartEndDuration","startTime","endTime","duration","clockOffset","charAt","_duration","Number","parseFloat","isDuration","Error","JSON","_startTime","checkStringOrDate","_endTime","add","subtract","undefined","_clockOffset","start","end","contains","other","isAfter","isBefore","overlaps","intersect","tb","te","union","toIsoWoZ","d","isMoment","Date","lc","toLowerCase","makeParam","val","encodeURIComponent","date","substring","checkProtocol","_protocol","document","location","protocol","defaultFetchInitObj","mimeType","headers","Accept","cache","redirect","mode","referrer","doFetchWithTimeout","url","fetchInit","timeoutSec","controller","AbortController","signal","setTimeout","abort","absoluteUrl","URL","fetch","catch","err","then","response","ok","status","meanOfSlice","dataSlice","totalPts","reduce","acc","byTwo","Math","floor","slice"],"mappings":"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"}