{"version":3,"file":"plotutil.js","sources":["../../src/plotutil.js"],"sourcesContent":["// @flow\n\n/*\n * Philip Crotwell\n * University of South Carolina, 2019\n * http://www.seis.sc.edu\n */\n\nimport moment from 'moment';\nimport RSVP from 'rsvp';\nimport * as d3 from 'd3';\nimport * as dataselect from './fdsndataselect.js';\nimport * as miniseed from './miniseed.js';\nimport {Seismogram, SeismogramDisplayData} from './seismogram.js';\nimport { SeismographConfig } from './seismographconfig';\nimport {Seismograph} from './seismograph.js';\nimport {StartEndDuration, isDef } from './util.js';\n\nexport { dataselect, miniseed, d3, RSVP, moment };\n\nexport type PlotDataType = {\n  \"sddList\": Array<SeismogramDisplayData>,\n  \"svgParent\": any\n};\n\n/**\n * Returns an array of Promises, one per selected element. This assumes each\n * element has some combination of start, end, duration, net, sta, loc, and chan\n * attributes sufficient to form the data query. Or an href to a miniseed file.\n *\n * @param selector css selector\n * @returns promise to array of plot data types\n */\nexport function createPlotsBySelectorPromise(selector: string): Promise<Array<PlotDataType>> {\n  let out = [];\n  d3.selectAll(selector).each(function() {\n    let svgParent = d3.select(this);\n    let url;\n    let startAttr = svgParent.attr(\"start\") ? svgParent.attr(\"start\") : null;\n    let endAttr = svgParent.attr(\"end\") ? svgParent.attr(\"end\") : null;\n    let duration = svgParent.attr(\"duration\");\n    let timeWindow = null;\n    if (isDef(startAttr) || isDef(endAttr) || isDef(duration)) {\n      timeWindow = new StartEndDuration(startAttr, endAttr, duration);\n    } else {\n      throw new Error(`Need at least one of start, end, duration.`);\n    }\n    if (svgParent.attr(\"href\")) {\n      // url to miniseed file\n      url = svgParent.attr(\"href\");\n      out.push( fetch(url)\n        .then(response => {\n          if (response.ok) {\n            return response.arrayBuffer();\n          } else {\n            throw new Error(\"Fetching over network was not ok: \"+response.status+\" \"+response.statusText);\n          }\n        })\n        .then(ab => {\n          let seismograms = miniseed.seismogramPerChannel(miniseed.parseDataRecords(ab));\n          let sddList = seismograms.map(s => {\n              let sdd = SeismogramDisplayData.fromSeismogram(s);\n              if (timeWindow) {sdd.timeWindow = timeWindow;}\n              return sdd;\n            });\n          return {\n            \"sddList\": sddList,\n            \"svgParent\": svgParent,\n          };\n        }));\n    } else {\n      let net = svgParent.attr(\"net\");\n      let sta = svgParent.attr(\"sta\");\n      let loc = svgParent.attr(\"loc\");\n      let chan = svgParent.attr(\"chan\");\n      if (! ( net && sta && loc && chan)) {\n        throw new Error(`Must set all of net, sta, loc, chan, but got ${net}, ${sta}, ${loc}, ${chan}`);\n      }\n      let host = svgParent.attr(\"host\");\n      if (! host) {\n          host = \"service.iris.edu\";\n      }\n\n      // $FlowFixMe\n      let request = new dataselect.DataSelectQuery().timeWindow(timeWindow);\n      if (host) { request.host(host); }\n      if (net) { request.networkCode(net); }\n      if (sta) { request.stationCode(sta); }\n      if (loc) { request.locationCode(loc); }\n      if (chan) { request.channelCode(chan); }\n\n      out.push(request.querySeismograms().then(seismograms => {\n        let sddList = seismograms.map(s => {\n            let sdd = SeismogramDisplayData.fromSeismogram(s);\n            if (isDef(timeWindow)) { sdd.timeWindow = timeWindow; }\n            return sdd;\n          });\n        return {\n          \"sddList\": sddList,\n          \"svgParent\": svgParent\n        };\n      }));\n    }\n  });\n  return RSVP.all(out);\n}\n\n\nexport function createPlotsBySelector(selector: string) {\n  return createPlotsBySelectorPromise(selector).then(function(resultArray){\n    resultArray.forEach(function(result: PlotDataType) {\n      result.svgParent.append(\"p\").text(\"Build plot\");\n        if (result.sddList.length >0) {\n          let svgDiv = result.svgParent.append(\"div\");\n          svgDiv.classed(\"svg-container-wide\", true);\n          let seisConfig = new SeismographConfig();\n          let seismogram = new Seismograph(svgDiv, seisConfig, result.sddList);\n          seismogram.draw();\n        } else {\n          result.svgParent.append(\"p\").text(\"No Data\");\n        }\n      });\n      return resultArray;\n  });\n}\n\nexport function alphabeticalSort(traceA: Seismogram, traceB: Seismogram) {\n  if (traceA.codes() < traceB.codes()) {\n    return -1;\n  } else {\n    return 1;\n  }\n}\n"],"names":["createPlotsBySelectorPromise","selector","out","d3","each","svgParent","url","startAttr","attr","endAttr","duration","timeWindow","isDef","StartEndDuration","Error","push","fetch","then","response","ok","arrayBuffer","status","statusText","ab","seismograms","miniseed","sddList","map","s","sdd","SeismogramDisplayData","fromSeismogram","net","sta","loc","chan","host","request","dataselect","networkCode","stationCode","locationCode","channelCode","querySeismograms","RSVP","all","createPlotsBySelector","resultArray","forEach","result","append","text","length","svgDiv","classed","seisConfig","SeismographConfig","seismogram","Seismograph","draw","alphabeticalSort","traceA","traceB","codes"],"mappings":"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"}