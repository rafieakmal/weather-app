{"version":3,"file":"distaz.js","sources":["../../src/distaz.js"],"sourcesContent":["// @flow\n\n/*\n * Philip Crotwell\n * University of South Carolina, 2019\n * http://www.seis.sc.edu\n */\n\n/** const for kilometers per degree on the earth, 111.19 */\nexport const kmPerDeg = 111.19;\n\n/**\n * Convert degrees into kilometers along the earth surface\n *\n * @param deg degrees to convert\n * @returns kilometers\n */\nexport function degtokm(deg: number): number {\n  return deg * kmPerDeg;\n}\n\n/**\n * Convert kilometers into degrees along the earth surface\n *\n * @param km kilometers to convert\n * @returns degrees\n */\nexport function kmtodeg(km: number): number {\n  return km / kmPerDeg;\n}\n\ntype DistAzOutput = {\n  delta: number,\n  az: number,\n  baz: number\n}\n\n/**\n *\n * Returns a simple object (DistAzOutput) with:\n *```\n *     delta       => Great Circle Arc distance in degrees\n *     az          => Azimuth of pt. 1 wrt pt. 2 in degrees\n *     baz         => Azimuth of pt. 2 wrt pt. 1 in degrees\n *```\n *\n * azimuth is if you stand at point 2 and measure angle between north\n *   and point 1. I.E. point 1 is the station and point 2 is the event.\n *\n * @param lat1 Latitude of first point (station) (+N, -S) in degrees\n * @param lon1 Longitude of first point(station) (+E, -W) in degrees\n * @param lat2 Latitude of second point (event)\n * @param lon2 Longitude of second point (event)\n * @returns delta, az, baz in a DistAzOutput\n */\nexport function distaz(lat1: number, lon1: number, lat2: number, lon2: number): DistAzOutput {\n    let result = {\n        stalat: lat1,\n        stalon: lon1,\n        evtlat: lat2,\n        evtlon: lon2,\n        delta: 0.0,\n        az: 0.0,\n        baz: 0.0\n    };\n\n    if ((lat1 === lat2)&&(lon1 === lon2)) {\n        // don't do calc, just return zero for idential points\n        result.delta = 0;\n        result.az = 0;\n        result.baz = 0;\n        return result;\n    }\n    let scolat, slon, ecolat, elon;\n    let a,b,c,d,e,aa,bb,cc,dd,ee,g,gg,h,hh,k,kk;\n    let rhs1,rhs2,sph,rad,del,daz,dbaz;\n\n    rad=2.*Math.PI/360.0;\n    /*\n     *\n     * scolat and ecolat are the geocentric colatitudes\n     * as defined by Richter (pg. 318)\n     *\n     * Earth Flattening of 1/298.257 take from Bott (pg. 3)\n     *\n     */\n    sph=1.0/298.257;\n\n    scolat=Math.PI/2.0 - Math.atan((1.-sph)*(1.-sph)*Math.tan(lat1*rad));\n    ecolat=Math.PI/2.0 - Math.atan((1.-sph)*(1.-sph)*Math.tan(lat2*rad));\n    slon=lon1*rad;\n    elon=lon2*rad;\n    /*\n     *\n     *  a - e are as defined by Bullen (pg. 154, Sec 10.2)\n     *     These are defined for the pt. 1\n     *\n     */\n    a=Math.sin(scolat)*Math.cos(slon);\n    b=Math.sin(scolat)*Math.sin(slon);\n    c=Math.cos(scolat);\n    d=Math.sin(slon);\n    e=-Math.cos(slon);\n    g=-c*e;\n    h=c*d;\n    k=-Math.sin(scolat);\n    /*\n     *\n     *  aa - ee are the same as a - e, except for pt. 2\n     *\n     */\n    aa=Math.sin(ecolat)*Math.cos(elon);\n    bb=Math.sin(ecolat)*Math.sin(elon);\n    cc=Math.cos(ecolat);\n    dd=Math.sin(elon);\n    ee=-Math.cos(elon);\n    gg=-cc*ee;\n    hh=cc*dd;\n    kk=-Math.sin(ecolat);\n    /*\n     *\n     *  Bullen, Sec 10.2, eqn. 4\n     *\n     */\n    del=Math.acos(a*aa + b*bb + c*cc);\n    result.delta=del/rad;\n    /*\n     *\n     *  Bullen, Sec 10.2, eqn 7 / eqn 8\n     *\n     *    pt. 1 is unprimed, so this is technically the baz\n     *\n     *  Calculate baz this way to avoid quadrant problems\n     *\n     */\n    rhs1=(aa-d)*(aa-d)+(bb-e)*(bb-e)+cc*cc - 2.;\n    rhs2=(aa-g)*(aa-g)+(bb-h)*(bb-h)+(cc-k)*(cc-k) - 2.;\n    dbaz=Math.atan2(rhs1,rhs2);\n    if (dbaz<0.0) {\n        dbaz=dbaz+2*Math.PI;\n    }\n    result.baz=dbaz/rad;\n    /*\n     *\n     *  Bullen, Sec 10.2, eqn 7 / eqn 8\n     *\n     *    pt. 2 is unprimed, so this is technically the az\n     *\n     */\n    rhs1=(a-dd)*(a-dd)+(b-ee)*(b-ee)+c*c - 2.;\n    rhs2=(a-gg)*(a-gg)+(b-hh)*(b-hh)+(c-kk)*(c-kk) - 2.;\n    daz=Math.atan2(rhs1,rhs2);\n    if(daz<0.0) {\n        daz=daz+2*Math.PI;\n    }\n    result.az=daz/rad;\n    /*\n     *\n     *   Make sure 0.0 is always 0.0, not 360.\n     *\n     */\n    if(Math.abs(result.baz-360.) < .00001) result.baz=0.0;\n    if(Math.abs(result.az-360.) < .00001) result.az=0.0;\n    return result;\n}\n"],"names":["kmPerDeg","degtokm","deg","kmtodeg","km","distaz","lat1","lon1","lat2","lon2","result","stalat","stalon","evtlat","evtlon","delta","az","baz","scolat","slon","ecolat","elon","a","b","c","d","e","aa","bb","cc","dd","ee","g","gg","h","hh","k","kk","rhs1","rhs2","sph","rad","del","daz","dbaz","Math","PI","atan","tan","sin","cos","acos","atan2","abs"],"mappings":"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"}