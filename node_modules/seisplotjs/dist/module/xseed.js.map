{"version":3,"file":"xseed.js","sources":["../../src/xseed.js"],"sourcesContent":["// @flow\n\n/*\n * Philip Crotwell\n * University of South Carolina, 2019\n * http://www.seis.sc.edu\n */\n\nimport * as seedcodec from './seedcodec';\nimport {SeismogramSegment, Seismogram} from './seismogram';\nimport {DataRecord} from './miniseed';\nimport moment from 'moment';\n\n/** const for unknown data version, 0 */\nexport const UNKNOWN_DATA_VERSION = 0;\n/** const for offset to crc in record, 28 */\nexport const CRC_OFFSET = 28;\n/** const for size of fixed header part of record, 40 */\nexport const FIXED_HEADER_SIZE=40;\n/** const for fdsn prefix for extra headers, FDSN */\nexport const FDSN_PREFIX = 'FDSN';\n/** const for little endian, true */\nexport const LITTLE_ENDIAN = true;\n\n/**\n * parse arrayBuffer into an array of XSeedRecords.\n *\n * @param arrayBuffer bytes to extract xseed records from\n * @returns array of all xseed records contained in the buffer\n */\nexport function parseXSeedRecords(arrayBuffer: ArrayBuffer): Array<XSeedRecord> {\n  let dataRecords = [];\n  let offset = 0;\n  while (offset < arrayBuffer.byteLength) {\n    let dataView = new DataView(arrayBuffer, offset);\n    if (! (dataView.getUint8(0) === 77 && dataView.getUint8(1) === 83)) {\n      throw new Error(`First byte must be M=77 S=83 at offset=${offset}, but was ${dataView.getUint8(0)} ${dataView.getUint8(1)}`);\n    }\n    let dr = XSeedRecord.createFromDataView(dataView);\n    dataRecords.push(dr);\n    offset += dr.getSize();\n  }\n  return dataRecords;\n}\n\n/**\n * Represents a xSEED Data Record, with header, extras and data.\n *\n * @param header xseed fixed record header\n * @param extraHeaders json compatible object with extra headers\n * @param rawData waveform data, in correct compression for value in header\n */\nexport class XSeedRecord {\n  header: XSeedHeader;\n  extraHeaders: any;\n  rawData: DataView;\n  constructor(header: XSeedHeader, extraHeaders: any, rawData: DataView) {\n    this.header = header;\n    this.rawData = rawData;\n    this.extraHeaders = extraHeaders;\n  }\n  /**\n   * Parses an xseed data record from a DataView.\n   *\n   * @param   dataView bytes to parse\n   * @returns parsed record\n   */\n  static createFromDataView(dataView: DataView): XSeedRecord {\n    const header = XSeedHeader.createFromDataView(dataView);\n    let extraDataView = new DataView(dataView.buffer,\n                             dataView.byteOffset+header.getSize(),\n                             header.extraHeadersLength);\n    const extraHeaders = parseExtraHeaders(extraDataView);\n    let sliceStart = dataView.byteOffset+header.getSize()+header.extraHeadersLength;\n    const rawData = new DataView(dataView.buffer.slice(sliceStart, sliceStart+ header.dataLength));\n\n    const xr = new XSeedRecord(header, extraHeaders, rawData);\n    return xr;\n  }\n  /**\n   * Calculates the byte size of the xseed record to hold this data.\n   *\n   * @returns size in bytes\n   */\n  getSize() {\n    let json = JSON.stringify(this.extraHeaders);\n    if (json.length > 2) {\n      this.header.extraHeadersLength = json.length;\n    } else {\n      this.header.extraHeadersLength = 0;\n    }\n    return this.header.getSize()+this.header.extraHeadersLength+this.header.dataLength;\n  }\n    /** Decompresses the data , if the compression\n     *  type is known\n     *\n     * @returns decompressed data as a typed array, usually Int32Array or Float32Array\n     */\n  decompress() {\n    return this.asEncodedDataSegment().decode();\n  }\n  /**\n   * Wraps data in an EncodedDataSegment for future decompression.\n   *\n   * @returns waveform data\n   */\n  asEncodedDataSegment() {\n    return new seedcodec.EncodedDataSegment(this.header.encoding,\n                                  this.rawData,\n                                  this.header.numSamples,\n                                  LITTLE_ENDIAN);\n  }\n  /**\n   * Just the header.identifier, included as codes() for compatiblility\n   * with parsed miniseed2 data records.\n   *\n   * @returns string identifier\n   */\n  codes() {\n      return this.header.identifier;\n  }\n\n  /**\n   * Saves xseed record into a DataView, recalculating crc.\n   *\n   * @param   dataView DataView to save into, must be large enough to hold the record.\n   * @returns the number of bytes written to the DataView, can be used as offset\n   * for writting the next record.\n   */\n  save(dataView: DataView): number {\n    let json = JSON.stringify(this.extraHeaders);\n    if (json.length > 2) {\n      this.header.extraHeadersLength = json.length;\n    } else {\n      this.header.extraHeadersLength = 0;\n    }\n    // don't write crc as we need to recalculate\n    let offset = this.header.save(dataView, 0, true);\n    if (json.length > 2) {\n      for (let i=0; i<json.length; i++) {\n        // not ok for unicode?\n        dataView.setInt8(offset, json.charCodeAt(i));\n        offset++;\n      }\n    }\n    if (this.rawData !== null ) {\n      for (let i=0; i< this.rawData.byteLength; i++) {\n        dataView.setUint8(offset+i, this.rawData.getUint8(i));\n      }\n      offset += this.rawData.byteLength;\n    } else {\n      throw new Error(\"rawData is null\");\n    }\n\n    let dvcrc = dataView.getUint32(CRC_OFFSET, true);\n    if (dvcrc !== 0) {\n      throw new Error(`CRC is not zero before calculate! ${dvcrc}`);\n    }\n    let crc = calculateCRC32C(dataView.buffer);\n    dataView.setUint32(CRC_OFFSET, crc, true);\n    return offset;\n  }\n\n  /**\n   * Calculates crc by saving to a DataView, which sets the crc header to zero\n   * and then calculates it based on the rest of the record.\n   *\n   * @returns         crc pulled from saved xseed record\n   */\n  calcCrc(): number {\n    let size = this.getSize();\n    let buff = new ArrayBuffer(this.getSize());\n    let dataView = new DataView(buff);\n    let offset = this.save(dataView);\n    if (offset !== size) {\n      throw new Error(`expect to write ${size} bytes but only ${offset}`);\n    }\n    let crc = dataView.getUint32(CRC_OFFSET, true);\n    return crc;\n  }\n}\n\n/**\n * Fixed header of an XSeed data record.\n */\nexport class XSeedHeader {\n  recordIndicator: string;\n  formatVersion: number;\n  flags: number;\n  nanosecond: number;\n  year: number;\n  dayOfYear: number;\n  hour: number;\n  minute: number;\n  second: number;\n  encoding: number;\n  sampleRatePeriod: number;\n  sampleRate: number;\n  numSamples: number;\n  crc: number;\n  publicationVersion: number;\n  identifierLength: number;\n  extraHeadersLength: number;\n  identifier: string;\n  extraHeaders: any;\n  dataLength: number;\n  start: moment;\n  end: moment;\n  constructor() {\n    // empty construction\n    this.recordIndicator = 'MS';\n    this.formatVersion = 3;\n    this.flags = 0;\n    this.nanosecond=0;\n    this.year = 1970;\n    this.dayOfYear=1;\n    this.hour=0;\n    this.minute=0;\n    this.second=0;\n    this.encoding = 3; // 32 bit ints\n    this.sampleRatePeriod = 1;\n    this.numSamples = 0;\n    this.crc = 0;\n    this.publicationVersion = UNKNOWN_DATA_VERSION;\n    this.identifierLength = 0;\n    this.extraHeadersLength = 2;\n    this.identifier = \"\";\n    this.extraHeaders = {};\n    this.dataLength = 0;\n  }\n  /**\n   * Parses an xseed fixed header from a DataView.\n   *\n   * @param   dataView bytes to parse\n   * @returns parsed header object\n   */\n  static createFromDataView(dataView: DataView): XSeedHeader {\n    const header = new XSeedHeader();\n    header.recordIndicator = makeString(dataView, 0,2);\n    if ( ! header.recordIndicator === 'MS') {\n      throw new Error(\"First 2 bytes of record should be MS but found \"+header.recordIndicator);\n    }\n    header.formatVersion = dataView.getUint8(2);\n    if (header.formatVersion !== 3) {\n      throw new Error(\"Format Version should be 3, \"+header.formatVersion);\n    }\n    header.flags = dataView.getUint8(3);\n    const headerLittleEndian = true;\n    header.nanosecond = dataView.getInt32(4, headerLittleEndian);\n    header.year = dataView.getInt16(8, headerLittleEndian);\n    if (checkByteSwap(header.year)) {\n      throw new Error(\"Looks like wrong byte order, year=\"+header.year);\n    }\n    header.dayOfYear = dataView.getInt16(10, headerLittleEndian);\n    header.hour = dataView.getUint8(12);\n    header.minute = dataView.getUint8(13);\n    header.second = dataView.getUint8(14);\n    header.encoding = dataView.getUint8(15);\n    header.sampleRatePeriod = dataView.getFloat64(16, headerLittleEndian);\n    if (header.sampleRatePeriod < 0) {\n      header.sampleRate = 1 / header.sampleRatePeriod;\n    } else {\n      header.sampleRate = header.sampleRatePeriod;\n    }\n    header.numSamples = dataView.getUint32(24, headerLittleEndian);\n    header.crc = dataView.getUint32(28, headerLittleEndian);\n    header.publicationVersion = dataView.getUint8(32);\n    header.identifierLength = dataView.getUint8(33);\n    header.extraHeadersLength = dataView.getUint16(34, headerLittleEndian);\n    header.dataLength = dataView.getUint32(36, headerLittleEndian);\n    header.identifier = makeString(dataView, 40, header.identifierLength);\n    // lazily extract json and data\n\n    header.start = header._startToMoment();\n    header.end = header.timeOfSample(header.numSamples-1);\n    return header;\n  }\n  /**\n   * Calculates size of the fixed header including the identifier, but without\n   * the extra headers.\n   *\n   * @returns size in bytes of fixed header\n   */\n  getSize() {\n    return FIXED_HEADER_SIZE+this.identifier.length;\n  }\n  toString() {\n    return this.identifier+\" \"+this.start.toISOString()+\" \"+this.encoding;\n  }\n  /**\n   * Converts start time header fields to ISO8641 time string.\n   *\n   * @returns iso start time\n   */\n  getStartFieldsAsISO() {\n    return ''+this.year+'-'+padZeros(this.dayOfYear, 3)\n      +'T'+padZeros(this.hour, 2)+':'+padZeros(this.minute, 2)+\":\"\n      +padZeros(this.second, 2)+\".\"+padZeros(this.nanosecond, 9)+\"Z\";\n  }\n  /**\n   * Calculates time of the ith sample.\n   *\n   * @param   i sample number\n   * @returns the time\n   */\n  timeOfSample(i: number) {\n    return moment.utc(this.start).add(1000*i/this.sampleRate, 'milliseconds');\n  }\n  /**\n   * Writes to the given dataview.\n   *\n   * @param   dataView write buffer\n   * @param   offset   offset within the buffer\n   * @param   zeroCrc  optionally zero out the crc field in order to recalculate\n   * @returns          new offset after this record\n   */\n  save(dataView: DataView, offset: number =0, zeroCrc: boolean =false) {\n    dataView.setInt8(offset, this.recordIndicator.charCodeAt(0));\n    offset++;\n    dataView.setInt8(offset, this.recordIndicator.charCodeAt(1));\n    offset++;\n    dataView.setInt8(offset, this.formatVersion);\n    offset++;\n    dataView.setInt8(offset, this.flags);\n    offset++;\n    dataView.setUint32(offset, this.nanosecond, true);\n    offset+=4;\n    dataView.setUint16(offset, this.year, true);\n    offset+=2;\n    dataView.setUint16(offset, this.dayOfYear, true);\n    offset+=2;\n    dataView.setInt8(offset, this.hour);\n    offset++;\n    dataView.setInt8(offset, this.minute);\n    offset++;\n    dataView.setInt8(offset, this.second);\n    offset++;\n    dataView.setInt8(offset, this.encoding);\n    offset++;\n    dataView.setFloat64(offset, this.sampleRatePeriod, true);\n    offset+=8;\n    dataView.setUint32(offset, this.numSamples, true);\n    offset += 4;\n    if (zeroCrc) {\n      dataView.setUint32(offset, 0, true);\n    } else {\n      dataView.setUint32(offset, this.crc, true);\n    }\n    offset += 4;\n    dataView.setInt8(offset, this.publicationVersion);\n    offset++;\n    dataView.setInt8(offset, this.identifier.length);\n    offset++;\n    dataView.setUint16(offset, this.extraHeadersLength, true);\n    offset += 2;\n    dataView.setUint32(offset, this.dataLength, true);\n    offset+=4;\n    for (let i=0; i<this.identifier.length; i++) {\n// not ok for unicode?\n      dataView.setInt8(offset, this.identifier.charCodeAt(i));\n      offset++;\n    }\n\n    return offset;\n  }\n  /**\n   * Converts header start time to moment\n   *\n   * @returns         start time as moment\n   */\n  _startToMoment(): moment {\n    let m = new moment.utc([this.year, 0, 1, this.hour, this.minute, this.second, 0]);\n    m.add(Math.round(this.nanosecond / 1000000), 'ms');\n    m.dayOfYear(this.dayOfYear);\n    if (m.isValid()) {\n      return m;\n    } else {\n      throw new Error(`Header start is invalid moment: ${this.year} ${this.dayOfYear} ${this.hour} ${this.minute} ${this.second} ${this.nanosecond}`);\n    }\n  }\n}\n\n/**\n * Parses extra headers as json.\n *\n * @param   dataView json bytes as DataView\n * @returns           json object\n */\nexport function parseExtraHeaders(dataView: DataView) {\n  if (dataView.byteLength === 0) {\n    return {};\n  }\n  let firstChar = dataView.getUint8(0);\n  if (firstChar === 123) {\n    // looks like json, '{' is ascii 123\n    return JSON.parse(makeString(dataView, 0, dataView.byteLength));\n  } else {\n    // $FlowFixMe\n    throw new Error(\"do not understand extras with first char val: \"+firstChar+\" \"+(firstChar===123));\n  }\n}\n\n/**\n * Creates a string version of a number with zero prefix padding. For example\n * padZeros(5, 3) is 005.\n *\n * @param   val number to stringify\n * @param   len total length of string\n * @returns      zero padded string\n */\nexport function padZeros(val: number, len: number) {\n  let out = \"\"+val;\n  while (out.length < len) {\n    out = \"0\"+out;\n  }\n  return out;\n}\n\n/**\n * creates a string from bytes in a DataView.\n *\n * @param   dataView data bytes\n * @param   offset   offset to first byte to use\n * @param   length   number of bytes to convert\n * @returns           string resulting from utf-8 conversion\n */\nexport function makeString(dataView: DataView, offset: number, length: number): string {\n  const utf8decoder = new TextDecoder('utf-8');\n  let u8arr = new Uint8Array(dataView.buffer, dataView.byteOffset+offset, length);\n  return utf8decoder.decode(u8arr).trim();\n}\n\n\n\n/**\n * Sanity checks on year to see if a record might be in the wrong byte order.\n * Checks year betwee 1960 and 2055.\n *\n * @param   year year as number to test\n * @returns        true is byte order appears to be wrong, false if it seems ok\n */\nfunction checkByteSwap(year: number) {\n  return year < 1960 || year > 2055;\n}\n\n/**\n * Checks if two xseed records are (nearly) contiguous.\n *\n * @param   dr1 first record\n * @param   dr2 second record\n * @param   sampRatio tolerence expressed as ratio of sample period, default 1.5\n * @returns      true if contiguous\n */\nexport function areContiguous(dr1: XSeedRecord, dr2: XSeedRecord, sampRatio: number =1.5): boolean {\n    let h1 = dr1.header;\n    let h2 = dr2.header;\n    return h1.end.isBefore( h2.start )\n        && moment.utc(h1.end).add(sampRatio/h1.sampleRate, 'seconds').isSameOrAfter(h2.start);\n}\n\n /** concatentates a sequence of XSeedRecords into a single seismogram object.\n  * Assumes that they are all contiguous (no gaps or overlaps) and in order.\n  * Header values from the first XSeedRecord are used.\n  *\n  * @param contig array of xseed records\n  * @returns seismogram segment for the records\n  */\nexport function createSeismogramSegment(contig: Array<XSeedRecord>): SeismogramSegment {\n  let contigData = contig.map(dr => dr.asEncodedDataSegment());\n  let out = new SeismogramSegment(contigData,\n                                 contig[0].header.sampleRate,\n                                 contig[0].header.start);\n  let codes = contig[0].header.identifier.slice(5).split('_');\n  out.networkCode = codes[0];\n  out.stationCode = codes[1];\n  out.locationCode = codes[2];\n  out.channelCode = codes[3]+codes[4]+codes[5];\n\n  return out;\n}\n\n\n /**\n  * Merges xseed records into a Seismogram object, each of\n  * which consists of SeismogramSegment objects\n  * containing the data as EncodedDataSegment objects. DataRecords are\n  * sorted by startTime.\n  * This assumes all data records are from the same channel, byChannel\n  * can be used first if multiple channels may be present. Gaps may be present.\n  *\n  * @param drList list of xseed records to convert\n  * @returns the seismogram\n  */\nexport function merge(drList: Array<XSeedRecord>): Seismogram {\n  let out = [];\n  let currDR;\n  drList.sort(function(a,b) {\n      return a.header.start.getTime() - b.header.start.getTime();\n  });\n  let contig = [];\n  for (let i=0; i<drList.length; i++) {\n    currDR = drList[i];\n    if ( contig.length === 0 ) {\n      contig.push(currDR);\n    } else if (areContiguous(contig[contig.length-1], currDR)) {\n      contig.push(currDR);\n    } else {\n      //found a gap\n      out.push(createSeismogramSegment(contig));\n      contig = [ currDR ];\n    }\n  }\n  if (contig.length > 0) {\n      // last segment\n      out.push(createSeismogramSegment(contig));\n      contig = [];\n  }\n  return new Seismogram(out);\n}\n\n/**\n * splits a list of data records by channel identifier, returning an object\n * with each NSLC mapped to an array of data records.\n *\n * @param drList array of xseed records\n * @returns map of channel id to array of xseed records, possibly not contiguous\n */\nexport function byChannel(drList: Array<XSeedRecord>): Map<string, Array<XSeedRecord>> {\n  let out: Map<string, Array<XSeedRecord>> = new Map();\n  let key;\n  for (let i=0; i<drList.length; i++) {\n    let currDR = drList[i];\n    key = currDR.codes();\n    let drArray = out.get(key);\n    if ( ! drArray) {\n      drArray = [currDR];\n      out.set(key, drArray);\n    } else {\n      drArray.push(currDR);\n    }\n  }\n  return out;\n}\n\n/**\n * splits the XSeedRecords by channel and creates a single\n * Seismogram for each channel.\n *\n * @param   drList XSeedRecords array\n * @returns         Map of code to Seismogram\n */\nexport function seismogramPerChannel(drList: Array<XSeedRecord> ): Array<Seismogram> {\n  let out = [];\n  let byChannelMap = byChannel(drList);\n  byChannelMap.forEach(segments => out.push(merge(segments)));\n  return out;\n}\n\n\n/* MSeed2 to xSeed converstion */\n\n/**\n * Convert array of Miniseed2 DataRecords into an array of XSeedRecords.\n *\n * @param   mseed2 array of DataRecords\n * @returns         array of XSeedRecords\n */\nexport function convertMS2toXSeed(mseed2: Array<DataRecord>): Array<XSeedRecord> {\n  let out = [];\n  for (let i=0; i< mseed2.length; i++) {\n    out.push(convertMS2Record(mseed2[i]));\n  }\n  return out;\n}\n\n/**\n * Converts a single miniseed2 DataRecord into a single XSeedRecord.\n *\n * @param   ms2record Miniseed2 DataRecord to convert\n * @returns            XSeedRecord\n */\nexport function convertMS2Record(ms2record: DataRecord): XSeedRecord {\n  let xHeader = new XSeedHeader();\n  let xExtras = {};\n  let ms2H = ms2record.header;\n  xHeader.flags = (ms2H.activityFlags & 1) *2\n     + (ms2H.ioClockFlags & 64 ) * 4\n     + (ms2H.dataQualityFlags & 16) * 8;\n  xHeader.year = ms2H.startBTime.year;\n  xHeader.dayOfYear = ms2H.startBTime.jday;\n  xHeader.hour = ms2H.startBTime.hour;\n  xHeader.minute = ms2H.startBTime.min;\n  xHeader.second = ms2H.startBTime.sec;\n  xHeader.nanosecond = ms2H.startBTime.tenthMilli*100000+ms2H.startBTime.microsecond*1000;\n  xHeader.sampleRatePeriod = ms2H.sampleRate >= 1 ? ms2H.sampleRate : (-1.0 / ms2H.sampleRate);\n  xHeader.encoding = ms2record.header.encoding;\n  xHeader.publicationVersion = UNKNOWN_DATA_VERSION;\n  xHeader.dataLength = ms2record.data.byteLength;\n  xHeader.identifier = FDSN_PREFIX + ':' +ms2H.netCode + SEP + ms2H.staCode + SEP + ( ms2H.locCode ? ms2H.locCode : \"\" ) + SEP + ms2H.chanCode;\n  xHeader.identifierLength = xHeader.identifier.length;\n\n  xHeader.numSamples = ms2H.numSamples;\n  xHeader.crc = 0;\n  if (ms2H.typeCode) {\n    if (ms2H.typeCode === 'R') {\n      xHeader.publicationVersion = 1;\n    } else if (ms2H.typeCode === 'D') {\n      xHeader.publicationVersion = 2;\n    } else if (ms2H.typeCode === 'Q') {\n      xHeader.publicationVersion = 3;\n    } else if (ms2H.typeCode === 'M') {\n      xHeader.publicationVersion = 4;\n    }\n    if (ms2H.typeCode !== 'D') {\n      xExtras.DataQuality = ms2H.typeCode;\n    }\n  }\n  if (xHeader.nanosecond < 0) {\n    xHeader.second -= 1;\n    xHeader.nanosecond += 1000000000;\n    if (xHeader.second < 0) {\n// might be wrong for leap seconds\n      xHeader.second += 60;\n      xHeader.minute -= 1;\n      if (xHeader.minute < 0) {\n        xHeader.minute += 60;\n        xHeader.hour -= 1;\n        if (xHeader.hour < 0) {\n          xHeader.hour += 24;\n          xHeader.dayOfYear =- 1;\n          if (xHeader.dayOfYear < 0) {\n// wrong for leap years\n            xHeader.dayOfYear += 365;\n            xHeader.year -= 1;\n          }\n        }\n      }\n    }\n  }\n  xHeader.extraHeadersLength = JSON.stringify(xExtras).length;\n  // need to convert if not steim1 or 2\n  let out = new XSeedRecord(xHeader, xExtras, ms2record.data);\n  return out;\n}\n\n/**\n * Default separator for channel id.\n */\nconst SEP = '_';\n\n/**\n * Copy from https://github.com/ashi009/node-fast-crc32c/blob/master/impls/js_crc32c.js\n * and modify to use ArrayBuffer.\n *\n * This code is a manual javascript translation of c code generated by\n * pycrc 0.7.1 (http://www.tty1.net/pycrc/). Command line used:\n * './pycrc.py --model=crc-32c --generate c --algorithm=table-driven'\n */\nconst kCRCTable = new Int32Array([\n  0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4,\n  0xc79a971f, 0x35f1141c, 0x26a1e7e8, 0xd4ca64eb,\n  0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b,\n  0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24,\n  0x105ec76f, 0xe235446c, 0xf165b798, 0x030e349b,\n  0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384,\n  0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54,\n  0x5d1d08bf, 0xaf768bbc, 0xbc267848, 0x4e4dfb4b,\n  0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a,\n  0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35,\n  0xaa64d611, 0x580f5512, 0x4b5fa6e6, 0xb93425e5,\n  0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa,\n  0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45,\n  0xf779deae, 0x05125dad, 0x1642ae59, 0xe4292d5a,\n  0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a,\n  0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595,\n  0x417b1dbc, 0xb3109ebf, 0xa0406d4b, 0x522bee48,\n  0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957,\n  0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687,\n  0x0c38d26c, 0xfe53516f, 0xed03a29b, 0x1f682198,\n  0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927,\n  0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38,\n  0xdbfc821c, 0x2997011f, 0x3ac7f2eb, 0xc8ac71e8,\n  0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7,\n  0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096,\n  0xa65c047d, 0x5437877e, 0x4767748a, 0xb50cf789,\n  0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859,\n  0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46,\n  0x7198540d, 0x83f3d70e, 0x90a324fa, 0x62c8a7f9,\n  0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6,\n  0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36,\n  0x3cdb9bdd, 0xceb018de, 0xdde0eb2a, 0x2f8b6829,\n  0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c,\n  0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93,\n  0x082f63b7, 0xfa44e0b4, 0xe9141340, 0x1b7f9043,\n  0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c,\n  0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3,\n  0x55326b08, 0xa759e80b, 0xb4091bff, 0x466298fc,\n  0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c,\n  0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033,\n  0xa24bb5a6, 0x502036a5, 0x4370c551, 0xb11b4652,\n  0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d,\n  0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d,\n  0xef087a76, 0x1d63f975, 0x0e330a81, 0xfc588982,\n  0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d,\n  0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622,\n  0x38cc2a06, 0xcaa7a905, 0xd9f75af1, 0x2b9cd9f2,\n  0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed,\n  0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530,\n  0x0417b1db, 0xf67c32d8, 0xe52cc12c, 0x1747422f,\n  0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff,\n  0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0,\n  0xd3d3e1ab, 0x21b862a8, 0x32e8915c, 0xc083125f,\n  0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540,\n  0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90,\n  0x9e902e7b, 0x6cfbad78, 0x7fab5e8c, 0x8dc0dd8f,\n  0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee,\n  0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1,\n  0x69e9f0d5, 0x9b8273d6, 0x88d28022, 0x7ab90321,\n  0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e,\n  0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81,\n  0x34f4f86a, 0xc69f7b69, 0xd5cf889d, 0x27a40b9e,\n  0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e,\n  0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351\n]);\n\n/**\n * Copy from https://github.com/ashi009/node-fast-crc32c/blob/master/impls/js_crc32c.js\n * and modify to use ArrayBuffer. Rename calculateCRC32C\n *\n * This code is a manual javascript translation of c code generated by\n * pycrc 0.7.1 (http://www.tty1.net/pycrc/). Command line used:\n * './pycrc.py --model=crc-32c --generate c --algorithm=table-driven'\n *\n * @param buf input data\n * @param initial starting value, from earlier data\n *\n * @returns calculated crc32c value\n */\nexport function calculateCRC32C(buf: ArrayBuffer | Uint8Array, initial: number =0 ) {\n  if ( buf instanceof ArrayBuffer){\n    buf = new Uint8Array(buf);\n  } else if ( buf instanceof Uint8Array) {\n    // ok\n  } else {\n    throw new Error(\"arg must be ArrayBuffer or Uint8Array\");\n  }\n  let crc = (initial | 0) ^ -1;\n  for (let i = 0; i < buf.length; i++){\n    crc = kCRCTable[(crc ^ buf[i]) & 0xff] ^ (crc >>> 8);\n    let tmp = crc;\n    tmp = (tmp ^ -1) >>> 0;\n    if (tmp < 0) {\n      tmp = 0xFFFFFFFF + tmp + 1;\n    }\n  }\n  return (crc ^ -1) >>> 0;\n}\n\n/**\n * Convert crc as a number into a hex string.\n *\n * @param   crc crc as a number\n * @returns      hex representation\n */\nexport function crcToHexString(crc: number): string {\n  if (crc < 0) {\n    crc = 0xFFFFFFFF + crc + 1;\n  }\n  let s = crc.toString(16).toUpperCase();\n  return \"0x\"+s;\n}\n"],"names":["UNKNOWN_DATA_VERSION","CRC_OFFSET","FIXED_HEADER_SIZE","FDSN_PREFIX","LITTLE_ENDIAN","parseXSeedRecords","arrayBuffer","dataRecords","offset","byteLength","dataView","DataView","getUint8","Error","dr","XSeedRecord","createFromDataView","push","getSize","constructor","header","extraHeaders","rawData","XSeedHeader","extraDataView","buffer","byteOffset","extraHeadersLength","parseExtraHeaders","sliceStart","slice","dataLength","xr","json","JSON","stringify","length","decompress","asEncodedDataSegment","decode","seedcodec","encoding","numSamples","codes","identifier","save","i","setInt8","charCodeAt","setUint8","dvcrc","getUint32","crc","calculateCRC32C","setUint32","calcCrc","size","buff","ArrayBuffer","recordIndicator","formatVersion","flags","nanosecond","year","dayOfYear","hour","minute","second","sampleRatePeriod","publicationVersion","identifierLength","makeString","headerLittleEndian","getInt32","getInt16","checkByteSwap","getFloat64","sampleRate","getUint16","start","_startToMoment","end","timeOfSample","toString","toISOString","getStartFieldsAsISO","padZeros","moment","utc","add","zeroCrc","setUint16","setFloat64","m","Math","round","isValid","firstChar","parse","val","len","out","utf8decoder","TextDecoder","u8arr","Uint8Array","trim","areContiguous","dr1","dr2","sampRatio","h1","h2","isBefore","isSameOrAfter","createSeismogramSegment","contig","contigData","map","SeismogramSegment","split","networkCode","stationCode","locationCode","channelCode","merge","drList","currDR","sort","a","b","getTime","Seismogram","byChannel","Map","key","drArray","get","set","seismogramPerChannel","byChannelMap","forEach","segments","convertMS2toXSeed","mseed2","convertMS2Record","ms2record","xHeader","xExtras","ms2H","activityFlags","ioClockFlags","dataQualityFlags","startBTime","jday","min","sec","tenthMilli","microsecond","data","netCode","SEP","staCode","locCode","chanCode","typeCode","DataQuality","kCRCTable","Int32Array","buf","initial","crcToHexString","s","toUpperCase"],"mappings":"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"}